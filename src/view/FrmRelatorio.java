/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import dal.ConexaoRanking;

import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.JTable;


/**
 *
 * @author User
 */
public class FrmRelatorio extends javax.swing.JFrame {
    private static int ano;
    private Connection con;
    private PreparedStatement ps;
    public ResultSet rs;
    public ConexaoRanking acesso;
    private int codigo;
    private boolean novo;
    private String data;

    /**
     * Creates new form FrmTelaOpcao
     */
    public FrmRelatorio() {
        initComponents();




        tblRelatorio.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);






        novo = true;
        acesso = new ConexaoRanking("root", "root", "localhost", "db_dudu_libras");
        try {
            con = acesso.conecta();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Erro: " + ex.getMessage());

        }

        carregaTabela();
        


    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRelatorio = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        btnSair = new javax.swing.JButton();
        btnJogar = new javax.swing.JButton();
        btnRanking = new javax.swing.JButton();
        cboDia = new javax.swing.JComboBox();
        txtFiltNome = new javax.swing.JTextField();
        lblNome = new javax.swing.JLabel();
        lblNome1 = new javax.swing.JLabel();
        lblImgCadNome2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        radNivel1 = new javax.swing.JRadioButton();
        radNivel2 = new javax.swing.JRadioButton();
        radNivel3 = new javax.swing.JRadioButton();
        lblNome3 = new javax.swing.JLabel();
        lblfiltselec = new javax.swing.JLabel();
        cboMes = new javax.swing.JComboBox();
        lblNome4 = new javax.swing.JLabel();
        lblNome5 = new javax.swing.JLabel();
        cboAno = new javax.swing.JComboBox();
        btnCadastrese1 = new javax.swing.JButton();
        lblDudu1 = new javax.swing.JLabel();
        btnOK = new javax.swing.JButton();
        btnLimpar = new javax.swing.JButton();
        lblFundo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1280, 720));
        setUndecorated(true);
        getContentPane().setLayout(null);

        tblRelatorio.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        tblRelatorio.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tblRelatorio.setGridColor(new java.awt.Color(255, 255, 255));
        tblRelatorio.setRowHeight(30);
        tblRelatorio.setRowSelectionAllowed(false);
        tblRelatorio.setSelectionBackground(new java.awt.Color(255, 255, 255));
        tblRelatorio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tblRelatorioKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tblRelatorio);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(20, 150, 800, 360);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/botoes/btnVoltarN.png"))); // NOI18N
        jButton1.setBorder(null);
        jButton1.setBorderPainted(false);
        jButton1.setContentAreaFilled(false);
        jButton1.setFocusPainted(false);
        jButton1.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/botoes/btnVoltarC.png"))); // NOI18N
        jButton1.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/botoes/btnVoltarH.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(1040, 540, 190, 180);

        btnSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/botoes/btnSairN.png"))); // NOI18N
        btnSair.setBorder(null);
        btnSair.setBorderPainted(false);
        btnSair.setContentAreaFilled(false);
        btnSair.setFocusPainted(false);
        btnSair.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/botoes/btnSairC.png"))); // NOI18N
        btnSair.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/botoes/btnSairH.png"))); // NOI18N
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });
        getContentPane().add(btnSair);
        btnSair.setBounds(0, 540, 200, 170);

        btnJogar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/botoes/btnLogarN.png"))); // NOI18N
        btnJogar.setBorder(null);
        btnJogar.setBorderPainted(false);
        btnJogar.setContentAreaFilled(false);
        btnJogar.setFocusPainted(false);
        btnJogar.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/botoes/btnLogarC.png"))); // NOI18N
        btnJogar.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/botoes/btnLogarH.png"))); // NOI18N
        btnJogar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnJogarActionPerformed(evt);
            }
        });
        getContentPane().add(btnJogar);
        btnJogar.setBounds(200, 540, 200, 170);

        btnRanking.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/botoes/btnRankingN.png"))); // NOI18N
        btnRanking.setBorder(null);
        btnRanking.setBorderPainted(false);
        btnRanking.setContentAreaFilled(false);
        btnRanking.setFocusPainted(false);
        btnRanking.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/botoes/btnRankingC.png"))); // NOI18N
        btnRanking.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/botoes/btnRankingH.png"))); // NOI18N
        btnRanking.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRankingActionPerformed(evt);
            }
        });
        getContentPane().add(btnRanking);
        btnRanking.setBounds(420, 530, 270, 190);

        cboDia.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        cboDia.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "...", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", " " }));
        cboDia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboDiaActionPerformed(evt);
            }
        });
        cboDia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cboDiaKeyPressed(evt);
            }
        });
        getContentPane().add(cboDia);
        cboDia.setBounds(850, 220, 70, 60);

        txtFiltNome.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        txtFiltNome.setForeground(new java.awt.Color(255, 255, 255));
        txtFiltNome.setToolTipText("");
        txtFiltNome.setBorder(null);
        txtFiltNome.setCaretColor(new java.awt.Color(255, 255, 255));
        txtFiltNome.setOpaque(false);
        txtFiltNome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtFiltNomeKeyPressed(evt);
            }
        });
        getContentPane().add(txtFiltNome);
        txtFiltNome.setBounds(860, 70, 280, 40);

        lblNome.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        lblNome.setForeground(new java.awt.Color(255, 255, 255));
        lblNome.setText("Escolha o NÃ­vel:");
        getContentPane().add(lblNome);
        lblNome.setBounds(840, 340, 300, 40);

        lblNome1.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        lblNome1.setForeground(new java.awt.Color(255, 255, 255));
        lblNome1.setText("Filtrar por Nome:");
        getContentPane().add(lblNome1);
        lblNome1.setBounds(840, 20, 300, 40);

        lblImgCadNome2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/botao_vazio.png"))); // NOI18N
        getContentPane().add(lblImgCadNome2);
        lblImgCadNome2.setBounds(840, 70, 333, 50);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setOpaque(false);
        jPanel1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jPanel1KeyPressed(evt);
            }
        });

        buttonGroup1.add(radNivel1);
        radNivel1.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        radNivel1.setForeground(new java.awt.Color(255, 255, 255));
        radNivel1.setSelected(true);
        radNivel1.setText("NÃ­vel 1");
        radNivel1.setOpaque(false);
        radNivel1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radNivel1ActionPerformed(evt);
            }
        });

        buttonGroup1.add(radNivel2);
        radNivel2.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        radNivel2.setForeground(new java.awt.Color(255, 255, 255));
        radNivel2.setText("NÃ­vel 2");
        radNivel2.setOpaque(false);
        radNivel2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radNivel2ActionPerformed(evt);
            }
        });

        buttonGroup1.add(radNivel3);
        radNivel3.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        radNivel3.setForeground(new java.awt.Color(255, 255, 255));
        radNivel3.setText("NÃ­vel 3");
        radNivel3.setOpaque(false);
        radNivel3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radNivel3ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(radNivel1)
                    .add(radNivel2)
                    .add(radNivel3))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                .add(10, 10, 10)
                .add(radNivel1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(radNivel2)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(radNivel3)
                .addContainerGap(10, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1);
        jPanel1.setBounds(840, 380, 180, 180);

        lblNome3.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        lblNome3.setForeground(new java.awt.Color(255, 255, 255));
        lblNome3.setText("/");
        getContentPane().add(lblNome3);
        lblNome3.setBounds(1060, 230, 40, 40);

        lblfiltselec.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        lblfiltselec.setForeground(new java.awt.Color(255, 255, 255));
        lblfiltselec.setText("Filtro(s) utilizado(s): Nenhum.");
        getContentPane().add(lblfiltselec);
        lblfiltselec.setBounds(20, 510, 820, 40);

        cboMes.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        cboMes.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "...", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", " ", " " }));
        cboMes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboMesActionPerformed(evt);
            }
        });
        cboMes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cboMesKeyPressed(evt);
            }
        });
        getContentPane().add(cboMes);
        cboMes.setBounds(970, 220, 70, 60);

        lblNome4.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        lblNome4.setForeground(new java.awt.Color(255, 255, 255));
        lblNome4.setText("Filtrar por Data:");
        getContentPane().add(lblNome4);
        lblNome4.setBounds(840, 170, 300, 40);

        lblNome5.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        lblNome5.setForeground(new java.awt.Color(255, 255, 255));
        lblNome5.setText("/");
        getContentPane().add(lblNome5);
        lblNome5.setBounds(940, 230, 40, 40);

        cboAno.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        cboAno.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "...", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022", "2023", "2024", " ", " " }));
        cboAno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboAnoActionPerformed(evt);
            }
        });
        cboAno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cboAnoKeyPressed(evt);
            }
        });
        getContentPane().add(cboAno);
        cboAno.setBounds(1090, 220, 120, 60);

        btnCadastrese1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/botoes/btnCadastroN.png"))); // NOI18N
        btnCadastrese1.setBorder(null);
        btnCadastrese1.setBorderPainted(false);
        btnCadastrese1.setContentAreaFilled(false);
        btnCadastrese1.setFocusPainted(false);
        btnCadastrese1.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/botoes/btnCadastroC.png"))); // NOI18N
        btnCadastrese1.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/botoes/btnCadastroH.png"))); // NOI18N
        btnCadastrese1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrese1ActionPerformed(evt);
            }
        });
        getContentPane().add(btnCadastrese1);
        btnCadastrese1.setBounds(700, 530, 270, 190);

        lblDudu1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/lblRelatorio.png"))); // NOI18N
        getContentPane().add(lblDudu1);
        lblDudu1.setBounds(40, 20, 340, 100);

        btnOK.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/btnAtualizarN.png"))); // NOI18N
        btnOK.setBorder(null);
        btnOK.setBorderPainted(false);
        btnOK.setContentAreaFilled(false);
        btnOK.setFocusPainted(false);
        btnOK.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/btnAtualizarC.png"))); // NOI18N
        btnOK.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/btnAtualizarH.png"))); // NOI18N
        btnOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOKActionPerformed(evt);
            }
        });
        getContentPane().add(btnOK);
        btnOK.setBounds(1020, 380, 250, 200);

        btnLimpar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/botoes/btnLimparN.png"))); // NOI18N
        btnLimpar.setBorderPainted(false);
        btnLimpar.setContentAreaFilled(false);
        btnLimpar.setFocusPainted(false);
        btnLimpar.setOpaque(false);
        btnLimpar.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/botoes/btnLimparC.png"))); // NOI18N
        btnLimpar.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/botoes/btnLimparH.png"))); // NOI18N
        btnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparActionPerformed(evt);
            }
        });
        getContentPane().add(btnLimpar);
        btnLimpar.setBounds(1060, 110, 200, 70);

        lblFundo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/fundonovo.png"))); // NOI18N
        lblFundo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                lblFundoKeyPressed(evt);
            }
        });
        getContentPane().add(lblFundo);
        lblFundo.setBounds(0, 0, 1380, 720);

        pack();
        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        java.awt.Dimension dialogSize = getSize();
        setLocation((screenSize.width-dialogSize.width)/2,(screenSize.height-dialogSize.height)/2);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        FrmTelaOpcao telaopcao = new FrmTelaOpcao();
        telaopcao.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed
        // TODO add your handling code here:

        System.exit(0);
    }//GEN-LAST:event_btnSairActionPerformed

    private void btnJogarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnJogarActionPerformed
        //ao clikar no botao ira abrir a tela de login

        FrmLogin telaLogin;
        telaLogin = new FrmLogin();
        telaLogin.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnJogarActionPerformed

    private void btnCadastrese1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrese1ActionPerformed
        // TODO add your handling code here:
        FrmCadastro cad = new FrmCadastro();
        cad.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnCadastrese1ActionPerformed

    private void btnRankingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRankingActionPerformed
        // ao clikar no botao ira abrir a tela de cadastro

        FrmRanking ranking = new FrmRanking();
        ranking.setVisible(true);
        this.dispose();

    }//GEN-LAST:event_btnRankingActionPerformed

    private void btnOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOKActionPerformed
        // TODO add your handling code here:
            
            data = "'%"+cboDia.getSelectedItem()+"/"+cboMes.getSelectedItem()+"/"+ano+"%'";
            
            
        
            if ("".equals(txtFiltNome.getText()) && (cboDia.getSelectedIndex() == 0 || cboMes.getSelectedIndex() == 0 || cboAno.getSelectedIndex() == 0)) {
            carregaTabela();
            lblfiltselec.setText("Filtro(s) utilizado(s): Nenhum.");

            }
       
            else if (cboDia.getSelectedIndex() == 0 || cboMes.getSelectedIndex() == 0 || cboAno.getSelectedIndex() == 0)
            {
            carregaTabelaFiltroNome();
            lblfiltselec.setText("Filtro(s) utilizado(s): Apenas por nome.");
            }
            
            else if ("".equals(txtFiltNome.getText())){
       
            carregaTabelaFiltroData();
            lblfiltselec.setText("Filtro(s) utilizado(s): Apenas por data.");
            }
            
            else {
            carregaTabelaFiltroDataNome();
            lblfiltselec.setText("Filtro(s) utilizado(s): Nome e data.");
            }



    }//GEN-LAST:event_btnOKActionPerformed

    private void radNivel1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radNivel1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radNivel1ActionPerformed

    private void radNivel2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radNivel2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radNivel2ActionPerformed

    private void radNivel3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radNivel3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radNivel3ActionPerformed

    private void cboDiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboDiaActionPerformed
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_cboDiaActionPerformed

    private void cboMesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboMesActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_cboMesActionPerformed

    private void cboAnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboAnoActionPerformed
        // TODO add your handling code here:
        
        ano = cboAno.getSelectedIndex()+ 2013;
        
        
        
       
    }//GEN-LAST:event_cboAnoActionPerformed

    private void txtFiltNomeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFiltNomeKeyPressed
        // TODO add your handling code here:
         if (evt.getKeyCode() == KeyEvent.VK_ENTER){
            btnOKActionPerformed(null);
        }
    }//GEN-LAST:event_txtFiltNomeKeyPressed

    private void cboDiaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cboDiaKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER){
            btnOKActionPerformed(null);
        }
    }//GEN-LAST:event_cboDiaKeyPressed

    private void cboMesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cboMesKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER){
            btnOKActionPerformed(null);
        }
    }//GEN-LAST:event_cboMesKeyPressed

    private void cboAnoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cboAnoKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER){
            btnOKActionPerformed(null);
        }
    }//GEN-LAST:event_cboAnoKeyPressed

    private void jPanel1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPanel1KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER){
            btnOKActionPerformed(null);
        }
    }//GEN-LAST:event_jPanel1KeyPressed

    private void tblRelatorioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblRelatorioKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER){
            btnOKActionPerformed(null);
        }
    }//GEN-LAST:event_tblRelatorioKeyPressed

    private void lblFundoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lblFundoKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER){
            btnOKActionPerformed(null);
        }
    }//GEN-LAST:event_lblFundoKeyPressed

    private void btnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparActionPerformed
        // TODO add your handling code here:
        txtFiltNome.setText("");
        cboDia.setSelectedIndex(0);
        cboMes.setSelectedIndex(0);
        cboAno.setSelectedIndex(0);
    }//GEN-LAST:event_btnLimparActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmRelatorio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmRelatorio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmRelatorio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmRelatorio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new FrmRelatorio().setVisible(true);
            }
        });
    }

    private void carregaTabela() {


        if (radNivel1.isSelected()) {

            try {


                ps = con.prepareStatement("select u.nm_usuario as Jogador, cd_log as 'CÃ³d.Log', dt_inicio_sessao as 'Data InÃ­cio',dt_fim_sessao as 'Data Fim', qt_pontos_totais_sessao as 'Pont. SessÃ£o',qt_pontos_totais_nv11 as 'Pont. MemÃ³ria1', qt_pontos_ganhos_nv11 as 'Pont. Ganhos MemÃ³ria1', qt_pontos_perdidos_nv11 as 'Pont. Perdidos Memoria1',qt_acertos_nv11 as 'Acertos Memoria1', qt_erros_nv11 as 'Erros Memoria1',qt_pontos_totais_atv11 as 'Pont. Atividade1', qt_pontos_ganhos_atv11 as 'Pont. Ganhos Atividade1', qt_pontos_perdidos_atv11 as 'Pont. Perdidos Atividade1',qt_acertos_atv11 as 'Acertos Atividade1', qt_erros_atv11 as 'Erros Atividade1', qt_vidas_perdidas_atv11 as 'Vidas Perd. Atividade1', qt_vidas_recuperadas_atv11 as 'Vidas Recu. Atividade1',qt_pontos_totais_nv12 as 'Pont. MemÃ³ria2', qt_pontos_ganhos_nv12 as 'Pont. Ganhos MemÃ³ria2', qt_pontos_perdidos_nv12 as 'Pont. Perdidos MemÃ³ria2',qt_acertos_nv12 as 'Acertos MemÃ³ria2', qt_erros_nv12 as 'Erros MemÃ³ria2',qt_pontos_totais_atv12 as 'Pont. Atividade2', qt_pontos_ganhos_atv12 as 'Pont. Ganhos Atividade2', qt_pontos_perdidos_atv12 as 'Pont. Perdidos Atividade2',qt_acertos_atv12 as 'Acertos Atividade2', qt_erros_atv12 as 'Erros Atividade2', qt_vidas_perdidas_atv12 as 'Vidas Perd. Atividade2', qt_vidas_recuperadas_atv12 as 'Vidas Recu. Atividade2'from tb_log_sessao as l inner join tb_usuario as u on l.cd_usuario = u.cd_usuario  order by cd_log desc");
                rs = ps.executeQuery();

                tblRelatorio.setModel(new TabelaModelo(rs));
                //ordenaÃ§Ã£o automÃ¡tica dos campos
                tblRelatorio.setAutoCreateRowSorter(true);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "Erro: " + ex.getMessage());
            }
        } else if (radNivel2.isSelected()) {

            try {


                ps = con.prepareStatement("select u.nm_usuario as Jogador, cd_log as 'CÃ³d.Log', dt_inicio_sessao as 'Data InÃ­cio',dt_fim_sessao as 'Data Fim', qt_pontos_totais_sessao as 'Pont. SessÃ£o',qt_pontos_totais_nv21 as 'Pont. MemÃ³ria1', qt_pontos_ganhos_nv21 as 'Pont. Ganhos MemÃ³ria1', qt_pontos_perdidos_nv21 as 'Pont. Perdidos Memoria1',qt_acertos_nv21 as 'Acertos Memoria1', qt_erros_nv21 as 'Erros Memoria1',qt_pontos_totais_atv21 as 'Pont. Atividade1', qt_pontos_ganhos_atv21 as 'Pont. Ganhos Atividade1', qt_pontos_perdidos_atv21 as 'Pont. Perdidos Atividade1',qt_acertos_atv21 as 'Acertos Atividade1', qt_erros_atv21 as 'Erros Atividade1', qt_vidas_perdidas_atv21 as 'Vidas Perd. Atividade1', qt_vidas_recuperadas_atv21 as 'Vidas Recu. Atividade1',qt_pontos_totais_nv22 as 'Pont. MemÃ³ria2', qt_pontos_ganhos_nv22 as 'Pont. Ganhos MemÃ³ria2', qt_pontos_perdidos_nv22 as 'Pont. Perdidos MemÃ³ria2',qt_acertos_nv22 as 'Acertos MemÃ³ria2', qt_erros_nv22 as 'Erros MemÃ³ria2',qt_pontos_totais_atv22 as 'Pont. Atividade2', qt_pontos_ganhos_atv22 as 'Pont. Ganhos Atividade2', qt_pontos_perdidos_atv22 as 'Pont. Perdidos Atividade2',qt_acertos_atv22 as 'Acertos Atividade2', qt_erros_atv22 as 'Erros Atividade2', qt_vidas_perdidas_atv22 as 'Vidas Perd. Atividade2', qt_vidas_recuperadas_atv22 as 'Vidas Recu. Atividade2'from tb_log_sessao as l inner join tb_usuario as u on l.cd_usuario = u.cd_usuario  order by cd_log desc");
                rs = ps.executeQuery();

                tblRelatorio.setModel(new TabelaModelo(rs));
                //ordenaÃ§Ã£o automÃ¡tica dos campos
                tblRelatorio.setAutoCreateRowSorter(true);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "Erro: " + ex.getMessage());
            }

        } else {
            try {


                ps = con.prepareStatement("select u.nm_usuario as Jogador, cd_log as 'CÃ³d.Log', dt_inicio_sessao as 'Data InÃ­cio',dt_fim_sessao as 'Data Fim', qt_pontos_totais_sessao as 'Pont. SessÃ£o',qt_pontos_totais_nv31 as 'Pont. MemÃ³ria1', qt_pontos_ganhos_nv31 as 'Pont. Ganhos MemÃ³ria1', qt_pontos_perdidos_nv31 as 'Pont. Perdidos Memoria1',qt_acertos_nv31 as 'Acertos Memoria1', qt_erros_nv31 as 'Erros Memoria1',qt_pontos_totais_atv31 as 'Pont. Atividade1', qt_pontos_ganhos_atv31 as 'Pont. Ganhos Atividade1', qt_pontos_perdidos_atv31 as 'Pont. Perdidos Atividade1',qt_acertos_atv31 as 'Acertos Atividade1', qt_erros_atv31 as 'Erros Atividade1', qt_vidas_perdidas_atv31 as 'Vidas Perd. Atividade1', qt_vidas_recuperadas_atv31 as 'Vidas Recu. Atividade1'from tb_log_sessao as l inner join tb_usuario as u on l.cd_usuario = u.cd_usuario  order by cd_log desc");
                rs = ps.executeQuery();

                tblRelatorio.setModel(new TabelaModelo(rs));
                //ordenaÃ§Ã£o automÃ¡tica dos campos
                tblRelatorio.setAutoCreateRowSorter(true);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "Erro: " + ex.getMessage());
            }
        }

    }

    private void carregaTabelaFiltroNome() {


        if (radNivel1.isSelected()) {

            try {


                ps = con.prepareStatement("select u.nm_usuario as Jogador, cd_log as 'CÃ³d.Log', dt_inicio_sessao as 'Data InÃ­cio',dt_fim_sessao as 'Data Fim', qt_pontos_totais_sessao as 'Pont. SessÃ£o',qt_pontos_totais_nv11 as 'Pont. MemÃ³ria1', qt_pontos_ganhos_nv11 as 'Pont. Ganhos MemÃ³ria1', qt_pontos_perdidos_nv11 as 'Pont. Perdidos Memoria1',qt_acertos_nv11 as 'Acertos Memoria1', qt_erros_nv11 as 'Erros Memoria1',qt_pontos_totais_atv11 as 'Pont. Atividade1', qt_pontos_ganhos_atv11 as 'Pont. Ganhos Atividade1', qt_pontos_perdidos_atv11 as 'Pont. Perdidos Atividade1',qt_acertos_atv11 as 'Acertos Atividade1', qt_erros_atv11 as 'Erros Atividade1', qt_vidas_perdidas_atv11 as 'Vidas Perd. Atividade1', qt_vidas_recuperadas_atv11 as 'Vidas Recu. Atividade1',qt_pontos_totais_nv12 as 'Pont. MemÃ³ria2', qt_pontos_ganhos_nv12 as 'Pont. Ganhos MemÃ³ria2', qt_pontos_perdidos_nv12 as 'Pont. Perdidos MemÃ³ria2',qt_acertos_nv12 as 'Acertos MemÃ³ria2', qt_erros_nv12 as 'Erros MemÃ³ria2',qt_pontos_totais_atv12 as 'Pont. Atividade2', qt_pontos_ganhos_atv12 as 'Pont. Ganhos Atividade2', qt_pontos_perdidos_atv12 as 'Pont. Perdidos Atividade2',qt_acertos_atv12 as 'Acertos Atividade2', qt_erros_atv12 as 'Erros Atividade2', qt_vidas_perdidas_atv12 as 'Vidas Perd. Atividade2', qt_vidas_recuperadas_atv12 as 'Vidas Recu. Atividade2'from tb_log_sessao as l inner join tb_usuario as u on l.cd_usuario = u.cd_usuario where u.nm_usuario = '" + txtFiltNome.getText() + "' order by cd_log desc");
                rs = ps.executeQuery();

                tblRelatorio.setModel(new TabelaModelo(rs));
                //ordenaÃ§Ã£o automÃ¡tica dos campos
                tblRelatorio.setAutoCreateRowSorter(true);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "Erro: " + ex.getMessage());
            }
        } else if (radNivel2.isSelected()) {

            try {


                ps = con.prepareStatement("select u.nm_usuario as Jogador, cd_log as 'CÃ³d.Log', dt_inicio_sessao as 'Data InÃ­cio',dt_fim_sessao as 'Data Fim', qt_pontos_totais_sessao as 'Pont. SessÃ£o',qt_pontos_totais_nv21 as 'Pont. MemÃ³ria1', qt_pontos_ganhos_nv21 as 'Pont. Ganhos MemÃ³ria1', qt_pontos_perdidos_nv21 as 'Pont. Perdidos Memoria1',qt_acertos_nv21 as 'Acertos Memoria1', qt_erros_nv21 as 'Erros Memoria1',qt_pontos_totais_atv21 as 'Pont. Atividade1', qt_pontos_ganhos_atv21 as 'Pont. Ganhos Atividade1', qt_pontos_perdidos_atv21 as 'Pont. Perdidos Atividade1',qt_acertos_atv21 as 'Acertos Atividade1', qt_erros_atv21 as 'Erros Atividade1', qt_vidas_perdidas_atv21 as 'Vidas Perd. Atividade1', qt_vidas_recuperadas_atv21 as 'Vidas Recu. Atividade1',qt_pontos_totais_nv22 as 'Pont. MemÃ³ria2', qt_pontos_ganhos_nv22 as 'Pont. Ganhos MemÃ³ria2', qt_pontos_perdidos_nv22 as 'Pont. Perdidos MemÃ³ria2',qt_acertos_nv22 as 'Acertos MemÃ³ria2', qt_erros_nv22 as 'Erros MemÃ³ria2',qt_pontos_totais_atv22 as 'Pont. Atividade2', qt_pontos_ganhos_atv22 as 'Pont. Ganhos Atividade2', qt_pontos_perdidos_atv22 as 'Pont. Perdidos Atividade2',qt_acertos_atv22 as 'Acertos Atividade2', qt_erros_atv22 as 'Erros Atividade2', qt_vidas_perdidas_atv22 as 'Vidas Perd. Atividade2', qt_vidas_recuperadas_atv22 as 'Vidas Recu. Atividade2'from tb_log_sessao as l inner join tb_usuario as u on l.cd_usuario = u.cd_usuario where u.nm_usuario = '" + txtFiltNome.getText() + "' order by cd_log desc");
                rs = ps.executeQuery();

                tblRelatorio.setModel(new TabelaModelo(rs));
                //ordenaÃ§Ã£o automÃ¡tica dos campos
                tblRelatorio.setAutoCreateRowSorter(true);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "Erro: " + ex.getMessage());
            }

        } else {
            try {


                ps = con.prepareStatement("select u.nm_usuario as Jogador, cd_log as 'CÃ³d.Log', dt_inicio_sessao as 'Data InÃ­cio',dt_fim_sessao as 'Data Fim', qt_pontos_totais_sessao as 'Pont. SessÃ£o',qt_pontos_totais_nv31 as 'Pont. MemÃ³ria1', qt_pontos_ganhos_nv31 as 'Pont. Ganhos MemÃ³ria1', qt_pontos_perdidos_nv31 as 'Pont. Perdidos Memoria1',qt_acertos_nv31 as 'Acertos Memoria1', qt_erros_nv31 as 'Erros Memoria1',qt_pontos_totais_atv31 as 'Pont. Atividade1', qt_pontos_ganhos_atv31 as 'Pont. Ganhos Atividade1', qt_pontos_perdidos_atv31 as 'Pont. Perdidos Atividade1',qt_acertos_atv31 as 'Acertos Atividade1', qt_erros_atv31 as 'Erros Atividade1', qt_vidas_perdidas_atv31 as 'Vidas Perd. Atividade1', qt_vidas_recuperadas_atv31 as 'Vidas Recu. Atividade1'from tb_log_sessao as l inner join tb_usuario as u on l.cd_usuario = u.cd_usuario where u.nm_usuario = '" + txtFiltNome.getText() + "' order by cd_log desc");
                rs = ps.executeQuery();

                tblRelatorio.setModel(new TabelaModelo(rs));
                //ordenaÃ§Ã£o automÃ¡tica dos campos
                tblRelatorio.setAutoCreateRowSorter(true);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "Erro: " + ex.getMessage());
            }
        }

    }

    private void carregaTabelaFiltroData() {


        if (radNivel1.isSelected()) {

            try {


                ps = con.prepareStatement("select u.nm_usuario as Jogador, cd_log as 'CÃ³d.Log', dt_inicio_sessao as 'Data InÃ­cio',dt_fim_sessao as 'Data Fim', qt_pontos_totais_sessao as 'Pont. SessÃ£o',qt_pontos_totais_nv11 as 'Pont. MemÃ³ria1', qt_pontos_ganhos_nv11 as 'Pont. Ganhos MemÃ³ria1', qt_pontos_perdidos_nv11 as 'Pont. Perdidos Memoria1',qt_acertos_nv11 as 'Acertos Memoria1', qt_erros_nv11 as 'Erros Memoria1',qt_pontos_totais_atv11 as 'Pont. Atividade1', qt_pontos_ganhos_atv11 as 'Pont. Ganhos Atividade1', qt_pontos_perdidos_atv11 as 'Pont. Perdidos Atividade1',qt_acertos_atv11 as 'Acertos Atividade1', qt_erros_atv11 as 'Erros Atividade1', qt_vidas_perdidas_atv11 as 'Vidas Perd. Atividade1', qt_vidas_recuperadas_atv11 as 'Vidas Recu. Atividade1',qt_pontos_totais_nv12 as 'Pont. MemÃ³ria2', qt_pontos_ganhos_nv12 as 'Pont. Ganhos MemÃ³ria2', qt_pontos_perdidos_nv12 as 'Pont. Perdidos MemÃ³ria2',qt_acertos_nv12 as 'Acertos MemÃ³ria2', qt_erros_nv12 as 'Erros MemÃ³ria2',qt_pontos_totais_atv12 as 'Pont. Atividade2', qt_pontos_ganhos_atv12 as 'Pont. Ganhos Atividade2', qt_pontos_perdidos_atv12 as 'Pont. Perdidos Atividade2',qt_acertos_atv12 as 'Acertos Atividade2', qt_erros_atv12 as 'Erros Atividade2', qt_vidas_perdidas_atv12 as 'Vidas Perd. Atividade2', qt_vidas_recuperadas_atv12 as 'Vidas Recu. Atividade2'from tb_log_sessao as l inner join tb_usuario as u on l.cd_usuario = u.cd_usuario where dt_inicio_sessao like "+data+" order by cd_log desc");
                rs = ps.executeQuery();

                tblRelatorio.setModel(new TabelaModelo(rs));
                //ordenaÃ§Ã£o automÃ¡tica dos campos
                tblRelatorio.setAutoCreateRowSorter(true);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "Erro: " + ex.getMessage());
            }
        } else if (radNivel2.isSelected()) {

            try {


                ps = con.prepareStatement("select u.nm_usuario as Jogador, cd_log as 'CÃ³d.Log', dt_inicio_sessao as 'Data InÃ­cio',dt_fim_sessao as 'Data Fim', qt_pontos_totais_sessao as 'Pont. SessÃ£o',qt_pontos_totais_nv21 as 'Pont. MemÃ³ria1', qt_pontos_ganhos_nv21 as 'Pont. Ganhos MemÃ³ria1', qt_pontos_perdidos_nv21 as 'Pont. Perdidos Memoria1',qt_acertos_nv21 as 'Acertos Memoria1', qt_erros_nv21 as 'Erros Memoria1',qt_pontos_totais_atv21 as 'Pont. Atividade1', qt_pontos_ganhos_atv21 as 'Pont. Ganhos Atividade1', qt_pontos_perdidos_atv21 as 'Pont. Perdidos Atividade1',qt_acertos_atv21 as 'Acertos Atividade1', qt_erros_atv21 as 'Erros Atividade1', qt_vidas_perdidas_atv21 as 'Vidas Perd. Atividade1', qt_vidas_recuperadas_atv21 as 'Vidas Recu. Atividade1',qt_pontos_totais_nv22 as 'Pont. MemÃ³ria2', qt_pontos_ganhos_nv22 as 'Pont. Ganhos MemÃ³ria2', qt_pontos_perdidos_nv22 as 'Pont. Perdidos MemÃ³ria2',qt_acertos_nv22 as 'Acertos MemÃ³ria2', qt_erros_nv22 as 'Erros MemÃ³ria2',qt_pontos_totais_atv22 as 'Pont. Atividade2', qt_pontos_ganhos_atv22 as 'Pont. Ganhos Atividade2', qt_pontos_perdidos_atv22 as 'Pont. Perdidos Atividade2',qt_acertos_atv22 as 'Acertos Atividade2', qt_erros_atv22 as 'Erros Atividade2', qt_vidas_perdidas_atv22 as 'Vidas Perd. Atividade2', qt_vidas_recuperadas_atv22 as 'Vidas Recu. Atividade2'from tb_log_sessao as l inner join tb_usuario as u on l.cd_usuario = u.cd_usuario where dt_inicio_sessao like  "+data+" order by cd_log desc");
                rs = ps.executeQuery();

                tblRelatorio.setModel(new TabelaModelo(rs));
                //ordenaÃ§Ã£o automÃ¡tica dos campos
                tblRelatorio.setAutoCreateRowSorter(true);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "Erro: " + ex.getMessage());
            }

        } else {
            try {


                ps = con.prepareStatement("select u.nm_usuario as Jogador, cd_log as 'CÃ³d.Log', dt_inicio_sessao as 'Data InÃ­cio',dt_fim_sessao as 'Data Fim', qt_pontos_totais_sessao as 'Pont. SessÃ£o',qt_pontos_totais_nv31 as 'Pont. MemÃ³ria1', qt_pontos_ganhos_nv31 as 'Pont. Ganhos MemÃ³ria1', qt_pontos_perdidos_nv31 as 'Pont. Perdidos Memoria1',qt_acertos_nv31 as 'Acertos Memoria1', qt_erros_nv31 as 'Erros Memoria1',qt_pontos_totais_atv31 as 'Pont. Atividade1', qt_pontos_ganhos_atv31 as 'Pont. Ganhos Atividade1', qt_pontos_perdidos_atv31 as 'Pont. Perdidos Atividade1',qt_acertos_atv31 as 'Acertos Atividade1', qt_erros_atv31 as 'Erros Atividade1', qt_vidas_perdidas_atv31 as 'Vidas Perd. Atividade1', qt_vidas_recuperadas_atv31 as 'Vidas Recu. Atividade1'from tb_log_sessao as l inner join tb_usuario as u on l.cd_usuario = u.cd_usuario where dt_inicio_sessao like  "+data+" order by cd_log desc");
                rs = ps.executeQuery();

                tblRelatorio.setModel(new TabelaModelo(rs));
                //ordenaÃ§Ã£o automÃ¡tica dos campos
                tblRelatorio.setAutoCreateRowSorter(true);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "Erro: " + ex.getMessage());
            }
        }

    }

    private void carregaTabelaFiltroDataNome() {


        if (radNivel1.isSelected()) {

            try {


                ps = con.prepareStatement("select u.nm_usuario as Jogador, cd_log as 'CÃ³d.Log', dt_inicio_sessao as 'Data InÃ­cio',dt_fim_sessao as 'Data Fim', qt_pontos_totais_sessao as 'Pont. SessÃ£o',qt_pontos_totais_nv11 as 'Pont. MemÃ³ria1', qt_pontos_ganhos_nv11 as 'Pont. Ganhos MemÃ³ria1', qt_pontos_perdidos_nv11 as 'Pont. Perdidos Memoria1',qt_acertos_nv11 as 'Acertos Memoria1', qt_erros_nv11 as 'Erros Memoria1',qt_pontos_totais_atv11 as 'Pont. Atividade1', qt_pontos_ganhos_atv11 as 'Pont. Ganhos Atividade1', qt_pontos_perdidos_atv11 as 'Pont. Perdidos Atividade1',qt_acertos_atv11 as 'Acertos Atividade1', qt_erros_atv11 as 'Erros Atividade1', qt_vidas_perdidas_atv11 as 'Vidas Perd. Atividade1', qt_vidas_recuperadas_atv11 as 'Vidas Recu. Atividade1',qt_pontos_totais_nv12 as 'Pont. MemÃ³ria2', qt_pontos_ganhos_nv12 as 'Pont. Ganhos MemÃ³ria2', qt_pontos_perdidos_nv12 as 'Pont. Perdidos MemÃ³ria2',qt_acertos_nv12 as 'Acertos MemÃ³ria2', qt_erros_nv12 as 'Erros MemÃ³ria2',qt_pontos_totais_atv12 as 'Pont. Atividade2', qt_pontos_ganhos_atv12 as 'Pont. Ganhos Atividade2', qt_pontos_perdidos_atv12 as 'Pont. Perdidos Atividade2',qt_acertos_atv12 as 'Acertos Atividade2', qt_erros_atv12 as 'Erros Atividade2', qt_vidas_perdidas_atv12 as 'Vidas Perd. Atividade2', qt_vidas_recuperadas_atv12 as 'Vidas Recu. Atividade2'from tb_log_sessao as l inner join tb_usuario as u on l.cd_usuario = u.cd_usuario where dt_inicio_sessao like "+data+" and u.nm_usuario = '" + txtFiltNome.getText() + "' order by cd_log desc");
                rs = ps.executeQuery();

                tblRelatorio.setModel(new TabelaModelo(rs));
                //ordenaÃ§Ã£o automÃ¡tica dos campos
                tblRelatorio.setAutoCreateRowSorter(true);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "Erro: " + ex.getMessage());
            }
        } else if (radNivel2.isSelected()) {

            try {


                ps = con.prepareStatement("select u.nm_usuario as Jogador, cd_log as 'CÃ³d.Log', dt_inicio_sessao as 'Data InÃ­cio',dt_fim_sessao as 'Data Fim', qt_pontos_totais_sessao as 'Pont. SessÃ£o',qt_pontos_totais_nv21 as 'Pont. MemÃ³ria1', qt_pontos_ganhos_nv21 as 'Pont. Ganhos MemÃ³ria1', qt_pontos_perdidos_nv21 as 'Pont. Perdidos Memoria1',qt_acertos_nv21 as 'Acertos Memoria1', qt_erros_nv21 as 'Erros Memoria1',qt_pontos_totais_atv21 as 'Pont. Atividade1', qt_pontos_ganhos_atv21 as 'Pont. Ganhos Atividade1', qt_pontos_perdidos_atv21 as 'Pont. Perdidos Atividade1',qt_acertos_atv21 as 'Acertos Atividade1', qt_erros_atv21 as 'Erros Atividade1', qt_vidas_perdidas_atv21 as 'Vidas Perd. Atividade1', qt_vidas_recuperadas_atv21 as 'Vidas Recu. Atividade1',qt_pontos_totais_nv22 as 'Pont. MemÃ³ria2', qt_pontos_ganhos_nv22 as 'Pont. Ganhos MemÃ³ria2', qt_pontos_perdidos_nv22 as 'Pont. Perdidos MemÃ³ria2',qt_acertos_nv22 as 'Acertos MemÃ³ria2', qt_erros_nv22 as 'Erros MemÃ³ria2',qt_pontos_totais_atv22 as 'Pont. Atividade2', qt_pontos_ganhos_atv22 as 'Pont. Ganhos Atividade2', qt_pontos_perdidos_atv22 as 'Pont. Perdidos Atividade2',qt_acertos_atv22 as 'Acertos Atividade2', qt_erros_atv22 as 'Erros Atividade2', qt_vidas_perdidas_atv22 as 'Vidas Perd. Atividade2', qt_vidas_recuperadas_atv22 as 'Vidas Recu. Atividade2'from tb_log_sessao as l inner join tb_usuario as u on l.cd_usuario = u.cd_usuario where dt_inicio_sessao like  "+data+" and u.nm_usuario = '" + txtFiltNome.getText() + "' order by cd_log desc");
                rs = ps.executeQuery();

                tblRelatorio.setModel(new TabelaModelo(rs));
                //ordenaÃ§Ã£o automÃ¡tica dos campos
                tblRelatorio.setAutoCreateRowSorter(true);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "Erro: " + ex.getMessage());
            }

        } else {
            try {


                ps = con.prepareStatement("select u.nm_usuario as Jogador, cd_log as 'CÃ³d.Log', dt_inicio_sessao as 'Data InÃ­cio',dt_fim_sessao as 'Data Fim', qt_pontos_totais_sessao as 'Pont. SessÃ£o',qt_pontos_totais_nv31 as 'Pont. MemÃ³ria1', qt_pontos_ganhos_nv31 as 'Pont. Ganhos MemÃ³ria1', qt_pontos_perdidos_nv31 as 'Pont. Perdidos Memoria1',qt_acertos_nv31 as 'Acertos Memoria1', qt_erros_nv31 as 'Erros Memoria1',qt_pontos_totais_atv31 as 'Pont. Atividade1', qt_pontos_ganhos_atv31 as 'Pont. Ganhos Atividade1', qt_pontos_perdidos_atv31 as 'Pont. Perdidos Atividade1',qt_acertos_atv31 as 'Acertos Atividade1', qt_erros_atv31 as 'Erros Atividade1', qt_vidas_perdidas_atv31 as 'Vidas Perd. Atividade1', qt_vidas_recuperadas_atv31 as 'Vidas Recu. Atividade1'from tb_log_sessao as l inner join tb_usuario as u on l.cd_usuario = u.cd_usuario where dt_inicio_sessao like  "+data+" and u.nm_usuario = '" + txtFiltNome.getText() + "' order by cd_log desc");
                rs = ps.executeQuery();

                tblRelatorio.setModel(new TabelaModelo(rs));
                //ordenaÃ§Ã£o automÃ¡tica dos campos
                tblRelatorio.setAutoCreateRowSorter(true);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "Erro: " + ex.getMessage());
            }
        }

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCadastrese1;
    private javax.swing.JButton btnJogar;
    private javax.swing.JButton btnLimpar;
    private javax.swing.JButton btnOK;
    private javax.swing.JButton btnRanking;
    private javax.swing.JButton btnSair;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JComboBox cboAno;
    private javax.swing.JComboBox cboDia;
    private javax.swing.JComboBox cboMes;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblDudu1;
    private javax.swing.JLabel lblFundo;
    private javax.swing.JLabel lblImgCadNome2;
    private javax.swing.JLabel lblNome;
    private javax.swing.JLabel lblNome1;
    private javax.swing.JLabel lblNome3;
    private javax.swing.JLabel lblNome4;
    private javax.swing.JLabel lblNome5;
    private javax.swing.JLabel lblfiltselec;
    private javax.swing.JRadioButton radNivel1;
    private javax.swing.JRadioButton radNivel2;
    private javax.swing.JRadioButton radNivel3;
    private javax.swing.JTable tblRelatorio;
    private javax.swing.JTextField txtFiltNome;
    // End of variables declaration//GEN-END:variables
}
