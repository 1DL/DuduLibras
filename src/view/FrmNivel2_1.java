/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import Sons.Sons;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.*;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import logs.LogSessao;
import model.Log;
import model.Usuario;

/**
 *
 * @author Aluno
 */
public class FrmNivel2_1 extends javax.swing.JFrame {

    private static int codUsuario;
    private static int pontuacao;
    static LogSessao logNv21 = new LogSessao();
    Timer tempoSessao;
    public int contador = 20; Timer t;
    Sons sfx = new Sons();
    public int contador2 = 0; Timer t2;

    /**
     * Creates new form FrmNivel2_1
     */
    public FrmNivel2_1(int codigo, LogSessao logHerdado) {
        initComponents();
        embaralhar();
        viraCartas();
        cartasInvisiveis();



        logHerdado.zeraLog();
        logNv21 = logHerdado;

        tempoSessao = new javax.swing.Timer(1000, new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                acaoTempoSessao();
            }
        });
        
        t = new javax.swing.Timer(400, new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                acaoDoTimer();
            }
        });
        t2 = new javax.swing.Timer(200, new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                acaoDoTimer2();
            }
        });
        t2.start();
        
        t.start();


        tempoSessao.start();
        codUsuario = codigo;
        Usuario conexao = new Usuario();

        pontuacao = conexao.mostrarPontuacao(codUsuario);
        lblPontos.setText("" + pontuacao);
        
travarCartas();
    }
    List<String> cartas = new ArrayList<String>(); //Sera usado para embaralhar
    String[] imgCartas = new String[13];
    String cartanaovirada = "/imagens/cartafrentenumerais.png";
//    L Declarei um array(vetor) 'cartaSelec' de 3 posições. A primeira posição, 0, não vai ser usada, 
//    Fiz dessa forma para não atrapalhar na hora de escrever e ler o código.
//    Esse array vai ser o responsável para coletar o valor das cartas que forem selecionadas,
//    e será usado para comparar se são iguais ou não
    public String cartaSelec[] = new String[3];
//    L Irei declarar diversas 'flags'. Flags é um mneomonio para variáveis usadas em armazenamento temporário
//    de informações, usadas para comparar e validar processamento ou continuação do código. Elas serão usadas em toda
//    a lógica do jogo da memoria.
//    L flagCartaPontuada é um array que irá armazenar quais cartas foram viradas e já foram validadas, ou seja, 
//    são as cartas viradas que COMBINARAM, e que não poderão ser mais viradas. É usada para impossibilitar
//    de clicar nas cartas que já foram viradas corretamente
//    
    public int[] flagCartaPontuada = new int[13];
    // L flag primeiraCartaVirada serve para marcar qual a primeira carta foi virada, e depois, ser comparada com a 
    // segunda carta. Caso a segunda carta não ter o mesmo valor da primeira, essa flag será usada para virar a carta denovo
    // e permitir que ela seja clicada novamente. Valor 0 para não, e 1, para sim
    public int primeiraCartaVirada = 0;
    //L Array valorCarta contem 11 posições, e novamente a 0 não será usada, para facilitar. Nesse array contem o valor
    // de cada carta, que será usada para comparação de valores da primeira e segunda carta virada.
    String[] valorCarta = new String[13];
    //L flagVirada é uma flag super importante. Com ela, o jogo não vai travar se várias cartas forem clicadas.
    //Inicializada em 0, e o valor muda para 1 caso alguem clique nela. A lógica do clicar no botão varia totalmente
    // de acordo com o valor dessa flag. Em 0, a lógica vai armazenar os valores da primeira carta, e em 1, a lógica
    // vai armazenar os valores da segunda carta, comparar com a primeira, dar os resultados e revirar as cartas.
    public int flagVirada = 0;
    // Instanciando a referência para a classe nivel1. O nome da referência é nivel
    public int[] flagClicavel = new int[13];

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnCarta1 = new javax.swing.JButton();
        btnCarta2 = new javax.swing.JButton();
        btnCarta3 = new javax.swing.JButton();
        btnCarta4 = new javax.swing.JButton();
        btnCarta5 = new javax.swing.JButton();
        btnCarta6 = new javax.swing.JToggleButton();
        btnCarta7 = new javax.swing.JButton();
        btnCarta8 = new javax.swing.JButton();
        btnCarta9 = new javax.swing.JToggleButton();
        btnCarta10 = new javax.swing.JButton();
        btnCarta11 = new javax.swing.JButton();
        btnCarta12 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnAvancar = new javax.swing.JButton();
        btnAjuda = new javax.swing.JButton();
        descricao_nivel2 = new javax.swing.JLabel();
        lbl_2 = new javax.swing.JLabel();
        btnDeslogar = new javax.swing.JButton();
        btnSair = new javax.swing.JButton();
        btnSelecNivel = new javax.swing.JButton();
        jPanel = new javax.swing.JPanel();
        lblPontos = new javax.swing.JLabel();
        fundo_nivel1_2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1280, 720));
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(null);

        btnCarta1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/cartafrentenumerais.png"))); // NOI18N
        btnCarta1.setBorderPainted(false);
        btnCarta1.setContentAreaFilled(false);
        btnCarta1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCarta1ActionPerformed(evt);
            }
        });
        getContentPane().add(btnCarta1);
        btnCarta1.setBounds(110, 210, 120, 140);

        btnCarta2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/cartafrentenumerais.png"))); // NOI18N
        btnCarta2.setBorderPainted(false);
        btnCarta2.setContentAreaFilled(false);
        btnCarta2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCarta2ActionPerformed(evt);
            }
        });
        getContentPane().add(btnCarta2);
        btnCarta2.setBounds(260, 210, 120, 140);

        btnCarta3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/cartafrentenumerais.png"))); // NOI18N
        btnCarta3.setBorderPainted(false);
        btnCarta3.setContentAreaFilled(false);
        btnCarta3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCarta3ActionPerformed(evt);
            }
        });
        getContentPane().add(btnCarta3);
        btnCarta3.setBounds(410, 210, 120, 140);

        btnCarta4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/cartafrentenumerais.png"))); // NOI18N
        btnCarta4.setBorderPainted(false);
        btnCarta4.setContentAreaFilled(false);
        btnCarta4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCarta4ActionPerformed(evt);
            }
        });
        getContentPane().add(btnCarta4);
        btnCarta4.setBounds(560, 210, 120, 140);

        btnCarta5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/cartafrentenumerais.png"))); // NOI18N
        btnCarta5.setBorderPainted(false);
        btnCarta5.setContentAreaFilled(false);
        btnCarta5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCarta5ActionPerformed(evt);
            }
        });
        getContentPane().add(btnCarta5);
        btnCarta5.setBounds(710, 210, 120, 140);

        btnCarta6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/cartafrentenumerais.png"))); // NOI18N
        btnCarta6.setBorderPainted(false);
        btnCarta6.setContentAreaFilled(false);
        btnCarta6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCarta6ActionPerformed(evt);
            }
        });
        getContentPane().add(btnCarta6);
        btnCarta6.setBounds(860, 210, 120, 140);

        btnCarta7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/cartafrentenumerais.png"))); // NOI18N
        btnCarta7.setBorderPainted(false);
        btnCarta7.setContentAreaFilled(false);
        btnCarta7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCarta7ActionPerformed(evt);
            }
        });
        getContentPane().add(btnCarta7);
        btnCarta7.setBounds(110, 400, 120, 140);

        btnCarta8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/cartafrentenumerais.png"))); // NOI18N
        btnCarta8.setBorderPainted(false);
        btnCarta8.setContentAreaFilled(false);
        btnCarta8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCarta8ActionPerformed(evt);
            }
        });
        getContentPane().add(btnCarta8);
        btnCarta8.setBounds(260, 400, 120, 140);

        btnCarta9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/cartafrentenumerais.png"))); // NOI18N
        btnCarta9.setBorderPainted(false);
        btnCarta9.setContentAreaFilled(false);
        btnCarta9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCarta9ActionPerformed(evt);
            }
        });
        getContentPane().add(btnCarta9);
        btnCarta9.setBounds(410, 400, 120, 140);

        btnCarta10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/cartafrentenumerais.png"))); // NOI18N
        btnCarta10.setBorderPainted(false);
        btnCarta10.setContentAreaFilled(false);
        btnCarta10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCarta10ActionPerformed(evt);
            }
        });
        getContentPane().add(btnCarta10);
        btnCarta10.setBounds(560, 400, 120, 140);

        btnCarta11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/cartafrentenumerais.png"))); // NOI18N
        btnCarta11.setBorderPainted(false);
        btnCarta11.setContentAreaFilled(false);
        btnCarta11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCarta11ActionPerformed(evt);
            }
        });
        getContentPane().add(btnCarta11);
        btnCarta11.setBounds(710, 400, 120, 140);

        btnCarta12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/cartafrentenumerais.png"))); // NOI18N
        btnCarta12.setBorderPainted(false);
        btnCarta12.setContentAreaFilled(false);
        btnCarta12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCarta12ActionPerformed(evt);
            }
        });
        getContentPane().add(btnCarta12);
        btnCarta12.setBounds(860, 400, 120, 140);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/jogodamemoria.png"))); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(180, 70, 520, 61);

        btnAvancar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/botoes/btnAvancarN.png"))); // NOI18N
        btnAvancar.setBorderPainted(false);
        btnAvancar.setContentAreaFilled(false);
        btnAvancar.setFocusPainted(false);
        btnAvancar.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/botoes/btnAvancarC.png"))); // NOI18N
        btnAvancar.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/botoes/btnAvançarH.png"))); // NOI18N
        btnAvancar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAvancarActionPerformed(evt);
            }
        });
        getContentPane().add(btnAvancar);
        btnAvancar.setBounds(1020, 520, 230, 190);

        btnAjuda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/botoes/btnAjudaN.png"))); // NOI18N
        btnAjuda.setBorderPainted(false);
        btnAjuda.setContentAreaFilled(false);
        btnAjuda.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/botoes/btnAjudaC.png"))); // NOI18N
        btnAjuda.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/botoes/btnAjudaH.png"))); // NOI18N
        btnAjuda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAjudaActionPerformed(evt);
            }
        });
        getContentPane().add(btnAjuda);
        btnAjuda.setBounds(1060, 0, 220, 160);

        descricao_nivel2.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        descricao_nivel2.setForeground(new java.awt.Color(255, 255, 255));
        descricao_nivel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/descricao_nivel2.png"))); // NOI18N
        getContentPane().add(descricao_nivel2);
        descricao_nivel2.setBounds(140, 30, 670, 30);

        lbl_2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/n2.png"))); // NOI18N
        getContentPane().add(lbl_2);
        lbl_2.setBounds(50, 10, 100, 80);

        btnDeslogar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/botoes/btnDeslogarN.png"))); // NOI18N
        btnDeslogar.setBorder(null);
        btnDeslogar.setBorderPainted(false);
        btnDeslogar.setContentAreaFilled(false);
        btnDeslogar.setFocusPainted(false);
        btnDeslogar.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/botoes/btnDeslogarC.png"))); // NOI18N
        btnDeslogar.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/botoes/btnDeslogarH.png"))); // NOI18N
        btnDeslogar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeslogarActionPerformed(evt);
            }
        });
        getContentPane().add(btnDeslogar);
        btnDeslogar.setBounds(190, 540, 250, 170);

        btnSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/botoes/btnSairN.png"))); // NOI18N
        btnSair.setBorder(null);
        btnSair.setBorderPainted(false);
        btnSair.setContentAreaFilled(false);
        btnSair.setFocusPainted(false);
        btnSair.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/botoes/btnSairC.png"))); // NOI18N
        btnSair.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/botoes/btnSairH.png"))); // NOI18N
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });
        getContentPane().add(btnSair);
        btnSair.setBounds(0, 540, 200, 170);

        btnSelecNivel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/botoes/btnSelecNivelN.png"))); // NOI18N
        btnSelecNivel.setBorder(null);
        btnSelecNivel.setBorderPainted(false);
        btnSelecNivel.setContentAreaFilled(false);
        btnSelecNivel.setFocusPainted(false);
        btnSelecNivel.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/botoes/btnSelecNivelC.png"))); // NOI18N
        btnSelecNivel.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/botoes/btnSelecNivelH.png"))); // NOI18N
        btnSelecNivel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelecNivelActionPerformed(evt);
            }
        });
        getContentPane().add(btnSelecNivel);
        btnSelecNivel.setBounds(1100, 340, 130, 100);

        jPanel.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(0), "Pontuação", 0, 0, new java.awt.Font("Trebuchet MS", 1, 18), new java.awt.Color(255, 255, 255)), null)); // NOI18N
        jPanel.setOpaque(false);

        lblPontos.setFont(new java.awt.Font("Trebuchet MS", 1, 48)); // NOI18N
        lblPontos.setForeground(new java.awt.Color(204, 255, 255));
        lblPontos.setText("0");
        jPanel.add(lblPontos);

        getContentPane().add(jPanel);
        jPanel.setBounds(1070, 200, 180, 100);

        fundo_nivel1_2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/fundoNivel1.png"))); // NOI18N
        getContentPane().add(fundo_nivel1_2);
        fundo_nivel1_2.setBounds(0, 0, 1280, 720);

        pack();
        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        java.awt.Dimension dialogSize = getSize();
        setLocation((screenSize.width-dialogSize.width)/2,(screenSize.height-dialogSize.height)/2);
    }// </editor-fold>//GEN-END:initComponents

    private void btnCarta1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCarta1ActionPerformed
        // TODO add your handling code here:

        // L Wew. Vamos começar com a brincadeira
        if ((flagClicavel[1] == 1) || (flagCartaPontuada[1] == 1)) {
        } else {

            if (flagVirada == 0) //Valida se não teve uma carta clicada anteriormente.
            {
                // Caso não...
                flagVirada = flagVirada + 1; //Vai contar como se fosse a 1 a ser virada
                flagClicavel[1] = 1; // Desativa a carta para ser clicada novamente
                cartaSelec[1] = valorCarta[1]; // Atribui o 1 valor de comparação para o valor da carta

                //Está trocando a imagem da carta para a imagem virada. A string carta1 é a que contem 
                //o caminho e nome da imagem, declarados embaixo do InitComponents();
                btnCarta1.setIcon(new javax.swing.ImageIcon(getClass().getResource(imgCartas[1])));

                primeiraCartaVirada = 1; //Salvando qual a carta que foi clicada primeiro.

            } else if (flagVirada == 1) //Valida se já teve uma carta clicada antes
            {
                //caso sim...
                flagVirada = flagVirada + 1; //Faz a flagvirada valer 2, para futuramente nao cair novamente
                //Nessa condição

                flagClicavel[1] = 1; // Desativa a carta para ser clicada novamente

                cartaSelec[2] = valorCarta[1]; //Atribui o 2 valor de comparação para o valor da carta

                btnCarta1.setIcon(new javax.swing.ImageIcon(getClass().getResource(imgCartas[1])));

                if (comparacao(cartaSelec[1], cartaSelec[2])) //Dentro do if é um método chamado comparacao
                //Esse metodo é simples, que recebe 2 valores em string e compara se são iguais, e retorna true caso sim
                //ou false caso não. Por padrão, chamar o metodo dentro do if, a condição para o if é se o método retornou
                // true
                {
                    //Caso seja true, as cartas clicadas são iguais

                    //JOptionPane.showMessageDialog(rootPane, "As cartas são iguais! Acertou!");
                    //SU esse codigo faz com que a menssagen seja mostrada no canto superior da dela ao inves de aparecer no meio do jogo
                    JdiMensagens msg = new JdiMensagens(this, rootPaneCheckingEnabled, "Parabéns! Você acertou, as cartas são iguais!", "", "");                     msg.setModal(true);                     msg.setLocation(100, 100);                     msg.setVisible(true);
                    logNv21.setAcertos(logNv21.getAcertos() + 1);
                    logNv21.setPontosGanhos(logNv21.getPontosGanhos() + 200);
                    logNv21.setPontosTotais(logNv21.getPontosTotais() + 200);
                    




                    
                    
                    
                    // SU fim desse trecho

                    //Salva a pontuação na classe, e exibe ela na tela
                    pontuacao = pontuacao + 200;
                    lblPontos.setText("" + pontuacao);

                    flagVirada = 0; //Como a lógica bateu, a flagVirada passa valer 0 para reiniciar 
                    //o processamento lógico das cartas selecionadas.

                    flagCartaPontuada[1] = 1; //Está dizendo que a carta foi virada de forma correta, então,
                    //Essa flag fará que essa carta não possa mais ser clicada, virada ou desvirada até o fim do jogo

                    switch (primeiraCartaVirada) //Esse switch case é extremamente importante. Ele é responsável para atribuir qual a primeira
                    //carta que foi selecinada anteriormente a essa, que está na flag primeiraCartaVirada.
                    //O valor dessa flag indica qual carta foi virada, e como a primeira e a segunda carta são iguais, 
                    // é preciso fazer que elas não sejam mais clicáveis
                    {
                        case 1:
                            flagCartaPontuada[1] = 1;
                            break;
                        case 2:
                            flagCartaPontuada[2] = 1;
                            break;
                        case 3:
                            flagCartaPontuada[3] = 1;
                            break;
                        case 4:
                            flagCartaPontuada[4] = 1;
                            break;
                        case 5:
                            flagCartaPontuada[5] = 1;
                            break;
                        case 6:
                            flagCartaPontuada[6] = 1;
                            break;
                        case 7:
                            flagCartaPontuada[7] = 1;
                            break;
                        case 8:
                            flagCartaPontuada[8] = 1;
                            break;
                        case 9:
                            flagCartaPontuada[9] = 1;
                            break;
                        case 10:
                            flagCartaPontuada[10] = 1;
                            break;
                        case 11:
                            flagCartaPontuada[11] = 1;
                            break;
                        case 12:
                            flagCartaPontuada[12] = 1;
                            break;
                    }
                    primeiraCartaVirada = 0;
                    this.finalizaAtividade(); //Procesamento realizado, a variavel é reinicializada em 0, para que
                    //todo o processamento seja refeito na proxima carta selecionada

                } else //Caso o retorno do metodo comparacao seja false, significa que a primeira e segunda carta não são iguais
                {

                    //JOptionPane.showMessageDialog(rootPane, "As cartas estão erradas. Tente novamente!");
                    //SU esse codigo faz com que a menssagen seja mostrada no canto superior da dela ao inves de aparecer no meio do jogo
                    JdiMensagens msg = new JdiMensagens(this, rootPaneCheckingEnabled, "Você errou. Tente novamente!", "", "");                     msg.setModal(true);                     msg.setLocation(100, 100); msg.setVisible(true);
                    logNv21.setErros(logNv21.getErros() + 1);
                    logNv21.setPontosPerdidos(logNv21.getPontosPerdidos() + 10);
                    logNv21.setPontosTotais(logNv21.getPontosTotais() - 10);
                    



                    
                    
                    
                    // SU fim desse trecho

                    //Vai tirar pontuação do jogador e exibir
                    pontuacao = pontuacao - 10;
                    if (pontuacao <= 0) {
                        pontuacao = 0;
                    }
                    lblPontos.setText("" + pontuacao);

                    flagVirada = 0; //Reinicializa a flagVirada, pois 2 cartas já foram clicadas,para 
                    //permitir que o jogador tente denovo e recomece todo o processamento

                    //Desvira a carta
                    btnCarta1.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                    flagClicavel[1] = 0;//Permite que a carta seja clicada denovo

                    switch (primeiraCartaVirada) //Outro switch case importante!! Ele verifica a flag primeiraCartaVirada e faz com que
                    //a primeira carta virada, seja virada de volta. Mas ele é especial pois, caso ja tenha alguma
                    //carta virada e já pontuada, ela nao pode ser desvirada, e por isso tem uma comparação
                    //de valores das cartas já pontuadas com a primeira carta clicada.
                    //Ele faz com que a primeira carta clicada se desvire e permita que seja clicada novamente,
                    //Exceto as cartas já pontuadas
                    {
                        case 1:
                            if (flagCartaPontuada[1] == 0) {
                                btnCarta1.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[1] = 0;
                            }
                            break;
                        case 2:
                            if (flagCartaPontuada[2] == 0) {
                                btnCarta2.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[2] = 0;
                            }
                            break;
                        case 3:
                            if (flagCartaPontuada[3] == 0) {
                                btnCarta3.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[3] = 0;
                            }
                            break;
                        case 4:
                            if (flagCartaPontuada[4] == 0) {
                                btnCarta4.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[4] = 0;
                            }
                            break;
                        case 5:
                            if (flagCartaPontuada[5] == 0) {
                                btnCarta5.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[5] = 0;
                            }
                            break;
                        case 6:
                            if (flagCartaPontuada[6] == 0) {
                                btnCarta6.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[6] = 0;
                            }
                            break;
                        case 7:
                            if (flagCartaPontuada[7] == 0) {
                                btnCarta7.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[7] = 0;
                            }
                            break;
                        case 8:
                            if (flagCartaPontuada[8] == 0) {
                                btnCarta8.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[8] = 0;
                            }
                            break;
                        case 9:
                            if (flagCartaPontuada[9] == 0) {
                                btnCarta9.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[9] = 0;
                            }
                            break;
                        case 10:
                            if (flagCartaPontuada[10] == 0) {
                                btnCarta10.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[10] = 0;
                            }
                            break;
                        case 11:
                            if (flagCartaPontuada[11] == 0) {
                                btnCarta11.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[11] = 0;
                            }
                            break;
                        case 12:
                            if (flagCartaPontuada[12] == 0) {
                                btnCarta12.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[12] = 0;
                            }
                            break;

                    }

                }

            }
        }
    }//GEN-LAST:event_btnCarta1ActionPerformed

    private void btnCarta2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCarta2ActionPerformed
        // TODO add your handling code here:


        // L Wew. Vamos começar com a brincadeira
        if ((flagClicavel[2] == 1) || (flagCartaPontuada[2] == 1)) {
        } else {

            if (flagVirada == 0) //Valida se não teve uma carta clicada anteriormente.
            {
                // Caso não...
                flagVirada = flagVirada + 1; //Vai contar como se fosse a 1 a ser virada
                flagClicavel[2] = 1; // Desativa a carta para ser clicada novamente
                cartaSelec[1] = valorCarta[2]; // Atribui o 1 valor de comparação para o valor da carta

                //Está trocando a imagem da carta para a imagem virada. A string carta1 é a que contem 
                //o caminho e nome da imagem, declarados embaixo do InitComponents();
                btnCarta2.setIcon(new javax.swing.ImageIcon(getClass().getResource(imgCartas[2])));

                primeiraCartaVirada = 2; //Salvando qual a carta que foi clicada primeiro.

            } else if (flagVirada == 1) //Valida se já teve uma carta clicada antes
            {
                //caso sim...
                flagVirada = flagVirada + 1; //Faz a flagvirada valer 2, para futuramente nao cair novamente
                //Nessa condição

                flagClicavel[2] = 1; // Desativa a carta para ser clicada novamente

                cartaSelec[2] = valorCarta[2]; //Atribui o 2 valor de comparação para o valor da carta

                btnCarta2.setIcon(new javax.swing.ImageIcon(getClass().getResource(imgCartas[2])));

                if (comparacao(cartaSelec[1], cartaSelec[2])) //Dentro do if é um método chamado comparacao
                //Esse metodo é simples, que recebe 2 valores em string e compara se são iguais, e retorna true caso sim
                //ou false caso não. Por padrão, chamar o metodo dentro do if, a condição para o if é se o método retornou
                // true
                {
                    //Caso seja true, as cartas clicadas são iguais

                    //JOptionPane.showMessageDialog(rootPane, "As cartas são iguais! Acertou!");
                    //SU esse codigo faz com que a menssagen seja mostrada no canto superior da dela ao inves de aparecer no meio do jogo
                    JdiMensagens msg = new JdiMensagens(this, rootPaneCheckingEnabled, "Parabéns! Você acertou, as cartas são iguais!", "", "");                     msg.setModal(true);                     msg.setLocation(100, 100);                     msg.setVisible(true);
                    logNv21.setAcertos(logNv21.getAcertos() + 1);
                    logNv21.setPontosGanhos(logNv21.getPontosGanhos() + 200);
                    logNv21.setPontosTotais(logNv21.getPontosTotais() + 200);
                    
                    
                    
                    
                    // SU fim desse trecho

                    //Salva a pontuação na classe, e exibe ela na tela
                    pontuacao = pontuacao + 200;
                    lblPontos.setText("" + pontuacao);

                    flagVirada = 0; //Como a lógica bateu, a flagVirada passa valer 0 para reiniciar 
                    //o processamento lógico das cartas selecionadas.

                    flagCartaPontuada[1] = 1; //Está dizendo que a carta foi virada de forma correta, então,
                    //Essa flag fará que essa carta não possa mais ser clicada, virada ou desvirada até o fim do jogo

                    switch (primeiraCartaVirada) //Esse switch case é extremamente importante. Ele é responsável para atribuir qual a primeira
                    //carta que foi selecinada anteriormente a essa, que está na flag primeiraCartaVirada.
                    //O valor dessa flag indica qual carta foi virada, e como a primeira e a segunda carta são iguais, 
                    // é preciso fazer que elas não sejam mais clicáveis
                    {
                        case 1:
                            flagCartaPontuada[1] = 1;
                            break;
                        case 2:
                            flagCartaPontuada[2] = 1;
                            break;
                        case 3:
                            flagCartaPontuada[3] = 1;
                            break;
                        case 4:
                            flagCartaPontuada[4] = 1;
                            break;
                        case 5:
                            flagCartaPontuada[5] = 1;
                            break;
                        case 6:
                            flagCartaPontuada[6] = 1;
                            break;
                        case 7:
                            flagCartaPontuada[7] = 1;
                            break;
                        case 8:
                            flagCartaPontuada[8] = 1;
                            break;
                        case 9:
                            flagCartaPontuada[9] = 1;
                            break;
                        case 10:
                            flagCartaPontuada[10] = 1;
                            break;
                        case 11:
                            flagCartaPontuada[11] = 1;
                            break;
                        case 12:
                            flagCartaPontuada[12] = 1;
                            break;
                    }
                    primeiraCartaVirada = 0;
                    this.finalizaAtividade(); //Procesamento realizado, a variavel é reinicializada em 0, para que
                    //todo o processamento seja refeito na proxima carta selecionada

                } else //Caso o retorno do metodo comparacao seja false, significa que a primeira e segunda carta não são iguais
                {

                    //JOptionPane.showMessageDialog(rootPane, "As cartas estão erradas. Tente novamente!");
                    //SU esse codigo faz com que a menssagen seja mostrada no canto superior da dela ao inves de aparecer no meio do jogo
                    JdiMensagens msg = new JdiMensagens(this, rootPaneCheckingEnabled, "Você errou. Tente novamente!", "", "");                     msg.setModal(true);                     msg.setLocation(100, 100); msg.setVisible(true);
                    logNv21.setErros(logNv21.getErros() + 1);
                    logNv21.setPontosPerdidos(logNv21.getPontosPerdidos() + 10);
                    logNv21.setPontosTotais(logNv21.getPontosTotais() - 10);
                    
                    
                    
                    
                    // SU fim desse trecho

                    //Vai tirar pontuação do jogador e exibir
                    pontuacao = pontuacao - 10;
                    if (pontuacao <= 0) {
                        pontuacao = 0;
                    }
                    lblPontos.setText("" + pontuacao);

                    flagVirada = 0; //Reinicializa a flagVirada, pois 2 cartas já foram clicadas,para 
                    //permitir que o jogador tente denovo e recomece todo o processamento

                    //Desvira a carta
                    btnCarta2.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                    flagClicavel[2] = 0;//Permite que a carta seja clicada denovo

                    switch (primeiraCartaVirada) //Outro switch case importante!! Ele verifica a flag primeiraCartaVirada e faz com que
                    //a primeira carta virada, seja virada de volta. Mas ele é especial pois, caso ja tenha alguma
                    //carta virada e já pontuada, ela nao pode ser desvirada, e por isso tem uma comparação
                    //de valores das cartas já pontuadas com a primeira carta clicada.
                    //Ele faz com que a primeira carta clicada se desvire e permita que seja clicada novamente,
                    //Exceto as cartas já pontuadas
                    {
                        case 1:
                            if (flagCartaPontuada[1] == 0) {
                                btnCarta1.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[1] = 0;
                            }
                            break;
                        case 2:
                            if (flagCartaPontuada[2] == 0) {
                                btnCarta2.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[2] = 0;
                            }
                            break;
                        case 3:
                            if (flagCartaPontuada[3] == 0) {
                                btnCarta3.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[3] = 0;
                            }
                            break;
                        case 4:
                            if (flagCartaPontuada[4] == 0) {
                                btnCarta4.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[4] = 0;
                            }
                            break;
                        case 5:
                            if (flagCartaPontuada[5] == 0) {
                                btnCarta5.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[5] = 0;
                            }
                            break;
                        case 6:
                            if (flagCartaPontuada[6] == 0) {
                                btnCarta6.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[6] = 0;
                            }
                            break;
                        case 7:
                            if (flagCartaPontuada[7] == 0) {
                                btnCarta7.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[7] = 0;
                            }
                            break;
                        case 8:
                            if (flagCartaPontuada[8] == 0) {
                                btnCarta8.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[8] = 0;
                            }
                            break;
                        case 9:
                            if (flagCartaPontuada[9] == 0) {
                                btnCarta9.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[9] = 0;
                            }
                            break;
                        case 10:
                            if (flagCartaPontuada[10] == 0) {
                                btnCarta10.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[10] = 0;
                            }
                            break;
                        case 11:
                            if (flagCartaPontuada[11] == 0) {
                                btnCarta11.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[11] = 0;
                            }
                            break;
                        case 12:
                            if (flagCartaPontuada[12] == 0) {
                                btnCarta12.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[12] = 0;
                            }
                            break;

                    }

                }

            }
        }
    }//GEN-LAST:event_btnCarta2ActionPerformed

    private void btnCarta3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCarta3ActionPerformed
        if ((flagClicavel[3] == 1) || (flagCartaPontuada[3] == 1)) {
        } else {

            if (flagVirada == 0) //Valida se não teve uma carta clicada anteriormente.
            {
                // Caso não...
                flagVirada = flagVirada + 1; //Vai contar como se fosse a 1 a ser virada
                flagClicavel[3] = 1; // Desativa a carta para ser clicada novamente
                cartaSelec[1] = valorCarta[3]; // Atribui o 1 valor de comparação para o valor da carta

                //Está trocando a imagem da carta para a imagem virada. A string carta1 é a que contem 
                //o caminho e nome da imagem, declarados embaixo do InitComponents();
                btnCarta3.setIcon(new javax.swing.ImageIcon(getClass().getResource(imgCartas[3])));

                primeiraCartaVirada = 3; //Salvando qual a carta que foi clicada primeiro.

            } else if (flagVirada == 1) //Valida se já teve uma carta clicada antes
            {
                //caso sim...
                flagVirada = flagVirada + 1; //Faz a flagvirada valer 2, para futuramente nao cair novamente
                //Nessa condição

                flagClicavel[3] = 1; // Desativa a carta para ser clicada novamente

                cartaSelec[2] = valorCarta[3]; //Atribui o 2 valor de comparação para o valor da carta

                btnCarta3.setIcon(new javax.swing.ImageIcon(getClass().getResource(imgCartas[3])));

                if (comparacao(cartaSelec[1], cartaSelec[2])) //Dentro do if é um método chamado comparacao
                //Esse metodo é simples, que recebe 2 valores em string e compara se são iguais, e retorna true caso sim
                //ou false caso não. Por padrão, chamar o metodo dentro do if, a condição para o if é se o método retornou
                // true
                {
                    //Caso seja true, as cartas clicadas são iguais

                    //JOptionPane.showMessageDialog(rootPane, "As cartas são iguais! Acertou!");
                    //SU esse codigo faz com que a menssagen seja mostrada no canto superior da dela ao inves de aparecer no meio do jogo
                    JdiMensagens msg = new JdiMensagens(this, rootPaneCheckingEnabled, "Parabéns! Você acertou, as cartas são iguais!", "", "");                     msg.setModal(true);                     msg.setLocation(100, 100);                     msg.setVisible(true);
                    logNv21.setAcertos(logNv21.getAcertos() + 1);
                    logNv21.setPontosGanhos(logNv21.getPontosGanhos() + 200);
                    logNv21.setPontosTotais(logNv21.getPontosTotais() + 200);
                    
                    
                    
                    
                    // SU fim desse trecho

                    //Salva a pontuação na classe, e exibe ela na tela
                    pontuacao = pontuacao + 200;
                    lblPontos.setText("" + pontuacao);

                    flagVirada = 0; //Como a lógica bateu, a flagVirada passa valer 0 para reiniciar 
                    //o processamento lógico das cartas selecionadas.

                    flagCartaPontuada[1] = 1; //Está dizendo que a carta foi virada de forma correta, então,
                    //Essa flag fará que essa carta não possa mais ser clicada, virada ou desvirada até o fim do jogo

                    switch (primeiraCartaVirada) //Esse switch case é extremamente importante. Ele é responsável para atribuir qual a primeira
                    //carta que foi selecinada anteriormente a essa, que está na flag primeiraCartaVirada.
                    //O valor dessa flag indica qual carta foi virada, e como a primeira e a segunda carta são iguais, 
                    // é preciso fazer que elas não sejam mais clicáveis
                    {
                        case 1:
                            flagCartaPontuada[1] = 1;
                            break;
                        case 2:
                            flagCartaPontuada[2] = 1;
                            break;
                        case 3:
                            flagCartaPontuada[3] = 1;
                            break;
                        case 4:
                            flagCartaPontuada[4] = 1;
                            break;
                        case 5:
                            flagCartaPontuada[5] = 1;
                            break;
                        case 6:
                            flagCartaPontuada[6] = 1;
                            break;
                        case 7:
                            flagCartaPontuada[7] = 1;
                            break;
                        case 8:
                            flagCartaPontuada[8] = 1;
                            break;
                        case 9:
                            flagCartaPontuada[9] = 1;
                            break;
                        case 10:
                            flagCartaPontuada[10] = 1;
                            break;
                        case 11:
                            flagCartaPontuada[11] = 1;
                            break;
                        case 12:
                            flagCartaPontuada[12] = 1;
                            break;
                    }
                    primeiraCartaVirada = 0;
                    this.finalizaAtividade(); //Procesamento realizado, a variavel é reinicializada em 0, para que
                    //todo o processamento seja refeito na proxima carta selecionada

                } else //Caso o retorno do metodo comparacao seja false, significa que a primeira e segunda carta não são iguais
                {

                    //JOptionPane.showMessageDialog(rootPane, "As cartas estão erradas. Tente novamente!");
                    //SU esse codigo faz com que a menssagen seja mostrada no canto superior da dela ao inves de aparecer no meio do jogo
                    JdiMensagens msg = new JdiMensagens(this, rootPaneCheckingEnabled, "Você errou. Tente novamente!", "", "");                     msg.setModal(true);                     msg.setLocation(100, 100); msg.setVisible(true);
                    logNv21.setErros(logNv21.getErros() + 1);
                    logNv21.setPontosPerdidos(logNv21.getPontosPerdidos() + 10);
                    logNv21.setPontosTotais(logNv21.getPontosTotais() - 10);
                    
                    
                    
                    
                    // SU fim desse trecho

                    //Vai tirar pontuação do jogador e exibir
                    pontuacao = pontuacao - 10;
                    if (pontuacao <= 0) {
                        pontuacao = 0;
                    }
                    lblPontos.setText("" + pontuacao);

                    flagVirada = 0; //Reinicializa a flagVirada, pois 2 cartas já foram clicadas,para 
                    //permitir que o jogador tente denovo e recomece todo o processamento

                    //Desvira a carta
                    btnCarta3.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                    flagClicavel[3] = 0;//Permite que a carta seja clicada denovo

                    switch (primeiraCartaVirada) //Outro switch case importante!! Ele verifica a flag primeiraCartaVirada e faz com que
                    //a primeira carta virada, seja virada de volta. Mas ele é especial pois, caso ja tenha alguma
                    //carta virada e já pontuada, ela nao pode ser desvirada, e por isso tem uma comparação
                    //de valores das cartas já pontuadas com a primeira carta clicada.
                    //Ele faz com que a primeira carta clicada se desvire e permita que seja clicada novamente,
                    //Exceto as cartas já pontuadas
                    {
                        case 1:
                            if (flagCartaPontuada[1] == 0) {
                                btnCarta1.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[1] = 0;
                            }
                            break;
                        case 2:
                            if (flagCartaPontuada[2] == 0) {
                                btnCarta2.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[2] = 0;
                            }
                            break;
                        case 3:
                            if (flagCartaPontuada[3] == 0) {
                                btnCarta3.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[3] = 0;
                            }
                            break;
                        case 4:
                            if (flagCartaPontuada[4] == 0) {
                                btnCarta4.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[4] = 0;
                            }
                            break;
                        case 5:
                            if (flagCartaPontuada[5] == 0) {
                                btnCarta5.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[5] = 0;
                            }
                            break;
                        case 6:
                            if (flagCartaPontuada[6] == 0) {
                                btnCarta6.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[6] = 0;
                            }
                            break;
                        case 7:
                            if (flagCartaPontuada[7] == 0) {
                                btnCarta7.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[7] = 0;
                            }
                            break;
                        case 8:
                            if (flagCartaPontuada[8] == 0) {
                                btnCarta8.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[8] = 0;
                            }
                            break;
                        case 9:
                            if (flagCartaPontuada[9] == 0) {
                                btnCarta9.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[9] = 0;
                            }
                            break;
                        case 10:
                            if (flagCartaPontuada[10] == 0) {
                                btnCarta10.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[10] = 0;
                            }
                            break;
                        case 11:
                            if (flagCartaPontuada[11] == 0) {
                                btnCarta11.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[11] = 0;
                            }
                            break;
                        case 12:
                            if (flagCartaPontuada[12] == 0) {
                                btnCarta12.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[12] = 0;
                            }
                            break;

                    }

                }

            }


        }
    }//GEN-LAST:event_btnCarta3ActionPerformed

    private void btnCarta4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCarta4ActionPerformed
        if ((flagClicavel[4] == 1) || (flagCartaPontuada[4] == 1)) {
        } else {

            if (flagVirada == 0) //Valida se não teve uma carta clicada anteriormente.
            {
                // Caso não...
                flagVirada = flagVirada + 1; //Vai contar como se fosse a 1 a ser virada
                flagClicavel[4] = 1; // Desativa a carta para ser clicada novamente
                cartaSelec[1] = valorCarta[4]; // Atribui o 1 valor de comparação para o valor da carta

                //Está trocando a imagem da carta para a imagem virada. A string carta1 é a que contem 
                //o caminho e nome da imagem, declarados embaixo do InitComponents();
                btnCarta4.setIcon(new javax.swing.ImageIcon(getClass().getResource(imgCartas[4])));

                primeiraCartaVirada = 4; //Salvando qual a carta que foi clicada primeiro.

            } else if (flagVirada == 1) //Valida se já teve uma carta clicada antes
            {
                //caso sim...
                flagVirada = flagVirada + 1; //Faz a flagvirada valer 2, para futuramente nao cair novamente
                //Nessa condição

                flagClicavel[4] = 1; // Desativa a carta para ser clicada novamente

                cartaSelec[2] = valorCarta[4]; //Atribui o 2 valor de comparação para o valor da carta

                btnCarta4.setIcon(new javax.swing.ImageIcon(getClass().getResource(imgCartas[4])));

                if (comparacao(cartaSelec[1], cartaSelec[2])) //Dentro do if é um método chamado comparacao
                //Esse metodo é simples, que recebe 2 valores em string e compara se são iguais, e retorna true caso sim
                //ou false caso não. Por padrão, chamar o metodo dentro do if, a condição para o if é se o método retornou
                // true
                {
                    //Caso seja true, as cartas clicadas são iguais

                    //JOptionPane.showMessageDialog(rootPane, "As cartas são iguais! Acertou!");
                    //SU esse codigo faz com que a menssagen seja mostrada no canto superior da dela ao inves de aparecer no meio do jogo
                    JdiMensagens msg = new JdiMensagens(this, rootPaneCheckingEnabled, "Parabéns! Você acertou, as cartas são iguais!", "", "");                     msg.setModal(true);                     msg.setLocation(100, 100);                     msg.setVisible(true);
                    logNv21.setAcertos(logNv21.getAcertos() + 1);
                    logNv21.setPontosGanhos(logNv21.getPontosGanhos() + 200);
                    logNv21.setPontosTotais(logNv21.getPontosTotais() + 200);
                    
                    
                    
                    
                    // SU fim desse trecho

                    //Salva a pontuação na classe, e exibe ela na tela
                    pontuacao = pontuacao + 200;
                    lblPontos.setText("" + pontuacao);

                    flagVirada = 0; //Como a lógica bateu, a flagVirada passa valer 0 para reiniciar 
                    //o processamento lógico das cartas selecionadas.

                    flagCartaPontuada[1] = 1; //Está dizendo que a carta foi virada de forma correta, então,
                    //Essa flag fará que essa carta não possa mais ser clicada, virada ou desvirada até o fim do jogo

                    switch (primeiraCartaVirada) //Esse switch case é extremamente importante. Ele é responsável para atribuir qual a primeira
                    //carta que foi selecinada anteriormente a essa, que está na flag primeiraCartaVirada.
                    //O valor dessa flag indica qual carta foi virada, e como a primeira e a segunda carta são iguais, 
                    // é preciso fazer que elas não sejam mais clicáveis
                    {
                        case 1:
                            flagCartaPontuada[1] = 1;
                            break;
                        case 2:
                            flagCartaPontuada[2] = 1;
                            break;
                        case 3:
                            flagCartaPontuada[3] = 1;
                            break;
                        case 4:
                            flagCartaPontuada[4] = 1;
                            break;
                        case 5:
                            flagCartaPontuada[5] = 1;
                            break;
                        case 6:
                            flagCartaPontuada[6] = 1;
                            break;
                        case 7:
                            flagCartaPontuada[7] = 1;
                            break;
                        case 8:
                            flagCartaPontuada[8] = 1;
                            break;
                        case 9:
                            flagCartaPontuada[9] = 1;
                            break;
                        case 10:
                            flagCartaPontuada[10] = 1;
                            break;
                        case 11:
                            flagCartaPontuada[11] = 1;
                            break;
                        case 12:
                            flagCartaPontuada[12] = 1;
                            break;
                    }
                    primeiraCartaVirada = 0;
                    this.finalizaAtividade(); //Procesamento realizado, a variavel é reinicializada em 0, para que
                    //todo o processamento seja refeito na proxima carta selecionada

                } else //Caso o retorno do metodo comparacao seja false, significa que a primeira e segunda carta não são iguais
                {

                    //JOptionPane.showMessageDialog(rootPane, "As cartas estão erradas. Tente novamente!");
                    //SU esse codigo faz com que a menssagen seja mostrada no canto superior da dela ao inves de aparecer no meio do jogo
                    JdiMensagens msg = new JdiMensagens(this, rootPaneCheckingEnabled, "Você errou. Tente novamente!", "", "");                     msg.setModal(true);                     msg.setLocation(100, 100); msg.setVisible(true);
                    logNv21.setErros(logNv21.getErros() + 1);
                    logNv21.setPontosPerdidos(logNv21.getPontosPerdidos() + 10);
                    logNv21.setPontosTotais(logNv21.getPontosTotais() - 10);
                    
                    
                    
                    
                    // SU fim desse trecho

                    //Vai tirar pontuação do jogador e exibir
                    pontuacao = pontuacao - 10;
                    if (pontuacao <= 0) {
                        pontuacao = 0;
                    }
                    lblPontos.setText("" + pontuacao);

                    flagVirada = 0; //Reinicializa a flagVirada, pois 2 cartas já foram clicadas,para 
                    //permitir que o jogador tente denovo e recomece todo o processamento

                    //Desvira a carta
                    btnCarta4.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                    flagClicavel[4] = 0;//Permite que a carta seja clicada denovo

                    switch (primeiraCartaVirada) //Outro switch case importante!! Ele verifica a flag primeiraCartaVirada e faz com que
                    //a primeira carta virada, seja virada de volta. Mas ele é especial pois, caso ja tenha alguma
                    //carta virada e já pontuada, ela nao pode ser desvirada, e por isso tem uma comparação
                    //de valores das cartas já pontuadas com a primeira carta clicada.
                    //Ele faz com que a primeira carta clicada se desvire e permita que seja clicada novamente,
                    //Exceto as cartas já pontuadas
                    {
                        case 1:
                            if (flagCartaPontuada[1] == 0) {
                                btnCarta1.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[1] = 0;
                            }
                            break;
                        case 2:
                            if (flagCartaPontuada[2] == 0) {
                                btnCarta2.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[2] = 0;
                            }
                            break;
                        case 3:
                            if (flagCartaPontuada[3] == 0) {
                                btnCarta3.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[3] = 0;
                            }
                            break;
                        case 4:
                            if (flagCartaPontuada[4] == 0) {
                                btnCarta4.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[4] = 0;
                            }
                            break;
                        case 5:
                            if (flagCartaPontuada[5] == 0) {
                                btnCarta5.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[5] = 0;
                            }
                            break;
                        case 6:
                            if (flagCartaPontuada[6] == 0) {
                                btnCarta6.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[6] = 0;
                            }
                            break;
                        case 7:
                            if (flagCartaPontuada[7] == 0) {
                                btnCarta7.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[7] = 0;
                            }
                            break;
                        case 8:
                            if (flagCartaPontuada[8] == 0) {
                                btnCarta8.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[8] = 0;
                            }
                            break;
                        case 9:
                            if (flagCartaPontuada[9] == 0) {
                                btnCarta9.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[9] = 0;
                            }
                            break;
                        case 10:
                            if (flagCartaPontuada[10] == 0) {
                                btnCarta10.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[10] = 0;
                            }
                            break;
                        case 11:
                            if (flagCartaPontuada[11] == 0) {
                                btnCarta11.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[11] = 0;
                            }
                            break;
                        case 12:
                            if (flagCartaPontuada[12] == 0) {
                                btnCarta12.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[12] = 0;
                            }
                            break;

                    }

                }

            }
        }
    }//GEN-LAST:event_btnCarta4ActionPerformed

    private void btnAvancarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAvancarActionPerformed
        // TODO add your handling code here:
        Usuario conectar = new Usuario();
        conectar.inserirPontuacao(codUsuario, pontuacao);
        gerarLogEncerrar();
        FrmAtividade2_1 telaAtividade = new FrmAtividade2_1(codUsuario, logNv21);
        telaAtividade.setVisible(true);
        this.dispose();

    }//GEN-LAST:event_btnAvancarActionPerformed

    private void btnAjudaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAjudaActionPerformed
        // TODO add your handling code here:
        JdiAjuda ajuda = new JdiAjuda(this, rootPaneCheckingEnabled, 5);
        ajuda.setModal(true);
        ajuda.setVisible(true);
    }//GEN-LAST:event_btnAjudaActionPerformed

    private void btnCarta12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCarta12ActionPerformed
        if ((flagClicavel[12] == 1) || (flagCartaPontuada[12] == 1)) {
        } else {

            if (flagVirada == 0) //Valida se não teve uma carta clicada anteriormente.
            {
                // Caso não...
                flagVirada = flagVirada + 1; //Vai contar como se fosse a 1 a ser virada
                flagClicavel[12] = 1; // Desativa a carta para ser clicada novamente
                cartaSelec[1] = valorCarta[12]; // Atribui o 1 valor de comparação para o valor da carta

                //Está trocando a imagem da carta para a imagem virada. A string carta1 é a que contem 
                //o caminho e nome da imagem, declarados embaixo do InitComponents();
                btnCarta12.setIcon(new javax.swing.ImageIcon(getClass().getResource(imgCartas[12])));

                primeiraCartaVirada = 12; //Salvando qual a carta que foi clicada primeiro.

            } else if (flagVirada == 1) //Valida se já teve uma carta clicada antes
            {
                //caso sim...
                flagVirada = flagVirada + 1; //Faz a flagvirada valer 2, para futuramente nao cair novamente
                //Nessa condição

                flagClicavel[12] = 1; // Desativa a carta para ser clicada novamente

                cartaSelec[2] = valorCarta[12]; //Atribui o 2 valor de comparação para o valor da carta

                btnCarta12.setIcon(new javax.swing.ImageIcon(getClass().getResource(imgCartas[12])));

                if (comparacao(cartaSelec[1], cartaSelec[2])) //Dentro do if é um método chamado comparacao
                //Esse metodo é simples, que recebe 2 valores em string e compara se são iguais, e retorna true caso sim
                //ou false caso não. Por padrão, chamar o metodo dentro do if, a condição para o if é se o método retornou
                // true
                {
                    //Caso seja true, as cartas clicadas são iguais

                    //JOptionPane.showMessageDialog(rootPane, "As cartas são iguais! Acertou!");
                    //SU esse codigo faz com que a menssagen seja mostrada no canto superior da dela ao inves de aparecer no meio do jogo
                    JdiMensagens msg = new JdiMensagens(this, rootPaneCheckingEnabled, "Parabéns! Você acertou, as cartas são iguais!", "", "");                     msg.setModal(true);                     msg.setLocation(100, 100);                     msg.setVisible(true);
                    logNv21.setAcertos(logNv21.getAcertos() + 1);
                    logNv21.setPontosGanhos(logNv21.getPontosGanhos() + 200);
                    logNv21.setPontosTotais(logNv21.getPontosTotais() + 200);
                    
                    
                    
                    
                    // SU fim desse trecho

                    //Salva a pontuação na classe, e exibe ela na tela
                    pontuacao = pontuacao + 200;
                    lblPontos.setText("" + pontuacao);

                    flagVirada = 0; //Como a lógica bateu, a flagVirada passa valer 0 para reiniciar 
                    //o processamento lógico das cartas selecionadas.

                    flagCartaPontuada[1] = 1; //Está dizendo que a carta foi virada de forma correta, então,
                    //Essa flag fará que essa carta não possa mais ser clicada, virada ou desvirada até o fim do jogo

                    switch (primeiraCartaVirada) //Esse switch case é extremamente importante. Ele é responsável para atribuir qual a primeira
                    //carta que foi selecinada anteriormente a essa, que está na flag primeiraCartaVirada.
                    //O valor dessa flag indica qual carta foi virada, e como a primeira e a segunda carta são iguais, 
                    // é preciso fazer que elas não sejam mais clicáveis
                    {
                        case 1:
                            flagCartaPontuada[1] = 1;
                            break;
                        case 2:
                            flagCartaPontuada[2] = 1;
                            break;
                        case 3:
                            flagCartaPontuada[3] = 1;
                            break;
                        case 4:
                            flagCartaPontuada[4] = 1;
                            break;
                        case 5:
                            flagCartaPontuada[5] = 1;
                            break;
                        case 6:
                            flagCartaPontuada[6] = 1;
                            break;
                        case 7:
                            flagCartaPontuada[7] = 1;
                            break;
                        case 8:
                            flagCartaPontuada[8] = 1;
                            break;
                        case 9:
                            flagCartaPontuada[9] = 1;
                            break;
                        case 10:
                            flagCartaPontuada[10] = 1;
                            break;
                        case 11:
                            flagCartaPontuada[11] = 1;
                            break;
                        case 12:
                            flagCartaPontuada[12] = 1;
                            break;
                    }
                    primeiraCartaVirada = 0;
                    this.finalizaAtividade(); //Procesamento realizado, a variavel é reinicializada em 0, para que
                    //todo o processamento seja refeito na proxima carta selecionada

                } else //Caso o retorno do metodo comparacao seja false, significa que a primeira e segunda carta não são iguais
                {

                    //JOptionPane.showMessageDialog(rootPane, "As cartas estão erradas. Tente novamente!");
                    //SU esse codigo faz com que a menssagen seja mostrada no canto superior da dela ao inves de aparecer no meio do jogo
                    JdiMensagens msg = new JdiMensagens(this, rootPaneCheckingEnabled, "Você errou. Tente novamente!", "", "");                     msg.setModal(true);                     msg.setLocation(100, 100); msg.setVisible(true);
                    logNv21.setErros(logNv21.getErros() + 1);
                    logNv21.setPontosPerdidos(logNv21.getPontosPerdidos() + 10);
                    logNv21.setPontosTotais(logNv21.getPontosTotais() - 10);
                    
                    
                    
                    
                    // SU fim desse trecho

                    //Vai tirar pontuação do jogador e exibir
                    pontuacao = pontuacao - 10;
                    if (pontuacao <= 0) {
                        pontuacao = 0;
                    }
                    lblPontos.setText("" + pontuacao);

                    flagVirada = 0; //Reinicializa a flagVirada, pois 2 cartas já foram clicadas,para 
                    //permitir que o jogador tente denovo e recomece todo o processamento

                    //Desvira a carta
                    btnCarta12.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                    flagClicavel[12] = 0;//Permite que a carta seja clicada denovo

                    switch (primeiraCartaVirada) //Outro switch case importante!! Ele verifica a flag primeiraCartaVirada e faz com que
                    //a primeira carta virada, seja virada de volta. Mas ele é especial pois, caso ja tenha alguma
                    //carta virada e já pontuada, ela nao pode ser desvirada, e por isso tem uma comparação
                    //de valores das cartas já pontuadas com a primeira carta clicada.
                    //Ele faz com que a primeira carta clicada se desvire e permita que seja clicada novamente,
                    //Exceto as cartas já pontuadas
                    {
                        case 1:
                            if (flagCartaPontuada[1] == 0) {
                                btnCarta1.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[1] = 0;
                            }
                            break;
                        case 2:
                            if (flagCartaPontuada[2] == 0) {
                                btnCarta2.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[2] = 0;
                            }
                            break;
                        case 3:
                            if (flagCartaPontuada[3] == 0) {
                                btnCarta3.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[3] = 0;
                            }
                            break;
                        case 4:
                            if (flagCartaPontuada[4] == 0) {
                                btnCarta4.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[4] = 0;
                            }
                            break;
                        case 5:
                            if (flagCartaPontuada[5] == 0) {
                                btnCarta5.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[5] = 0;
                            }
                            break;
                        case 6:
                            if (flagCartaPontuada[6] == 0) {
                                btnCarta6.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[6] = 0;
                            }
                            break;
                        case 7:
                            if (flagCartaPontuada[7] == 0) {
                                btnCarta7.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[7] = 0;
                            }
                            break;
                        case 8:
                            if (flagCartaPontuada[8] == 0) {
                                btnCarta8.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[8] = 0;
                            }
                            break;
                        case 9:
                            if (flagCartaPontuada[9] == 0) {
                                btnCarta9.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[9] = 0;
                            }
                            break;
                        case 10:
                            if (flagCartaPontuada[10] == 0) {
                                btnCarta10.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[10] = 0;
                            }
                            break;
                        case 11:
                            if (flagCartaPontuada[11] == 0) {
                                btnCarta11.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[11] = 0;
                            }
                            break;
                        case 12:
                            if (flagCartaPontuada[12] == 0) {
                                btnCarta12.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[12] = 0;
                            }
                            break;

                    }

                }

            }
        }

        // L Wew. Vamos começar com a brincadeira
        if ((flagClicavel[12] == 1) || (flagCartaPontuada[12] == 1)) {
        } else {

            if (flagVirada == 0) //Valida se não teve uma carta clicada anteriormente.
            {
                // Caso não...
                flagVirada = flagVirada + 1; //Vai contar como se fosse a 1 a ser virada
                flagClicavel[12] = 1; // Desativa a carta para ser clicada novamente
                cartaSelec[1] = valorCarta[12]; // Atribui o 1 valor de comparação para o valor da carta

                //Está trocando a imagem da carta para a imagem virada. A string carta1 é a que contem 
                //o caminho e nome da imagem, declarados embaixo do InitComponents();
                btnCarta12.setIcon(new javax.swing.ImageIcon(getClass().getResource(imgCartas[12])));

                primeiraCartaVirada = 12; //Salvando qual a carta que foi clicada primeiro.

            } else if (flagVirada == 1) //Valida se já teve uma carta clicada antes
            {
                //caso sim...
                flagVirada = flagVirada + 1; //Faz a flagvirada valer 2, para futuramente nao cair novamente
                //Nessa condição

                flagClicavel[12] = 1; // Desativa a carta para ser clicada novamente

                cartaSelec[2] = valorCarta[12]; //Atribui o 2 valor de comparação para o valor da carta

                btnCarta12.setIcon(new javax.swing.ImageIcon(getClass().getResource(imgCartas[12])));

                if (comparacao(cartaSelec[1], cartaSelec[2])) //Dentro do if é um método chamado comparacao
                //Esse metodo é simples, que recebe 2 valores em string e compara se são iguais, e retorna true caso sim
                //ou false caso não. Por padrão, chamar o metodo dentro do if, a condição para o if é se o método retornou
                // true
                {
                    //Caso seja true, as cartas clicadas são iguais

                    //JOptionPane.showMessageDialog(rootPane, "As cartas são iguais! Acertou!");
                    //SU esse codigo faz com que a menssagen seja mostrada no canto superior da dela ao inves de aparecer no meio do jogo
                    JdiMensagens msg = new JdiMensagens(this, rootPaneCheckingEnabled, "Parabéns! Você acertou, as cartas são iguais!", "", "");                     msg.setModal(true);                     msg.setLocation(100, 100);                     msg.setVisible(true);
                    logNv21.setAcertos(logNv21.getAcertos() + 1);
                    logNv21.setPontosGanhos(logNv21.getPontosGanhos() + 200);
                    logNv21.setPontosTotais(logNv21.getPontosTotais() + 200);
                    
                    
                    
                    
                    // SU fim desse trecho

                    //Salva a pontuação na classe, e exibe ela na tela
                    pontuacao = pontuacao + 200;
                    lblPontos.setText("" + pontuacao);

                    flagVirada = 0; //Como a lógica bateu, a flagVirada passa valer 0 para reiniciar 
                    //o processamento lógico das cartas selecionadas.

                    flagCartaPontuada[12] = 1; //Está dizendo que a carta foi virada de forma correta, então,
                    //Essa flag fará que essa carta não possa mais ser clicada, virada ou desvirada até o fim do jogo

                    switch (primeiraCartaVirada) //Esse switch case é extremamente importante. Ele é responsável para atribuir qual a primeira
                    //carta que foi selecinada anteriormente a essa, que está na flag primeiraCartaVirada.
                    //O valor dessa flag indica qual carta foi virada, e como a primeira e a segunda carta são iguais, 
                    // é preciso fazer que elas não sejam mais clicáveis
                    {
                        case 1:
                            flagCartaPontuada[1] = 1;
                            break;
                        case 2:
                            flagCartaPontuada[2] = 1;
                            break;
                        case 3:
                            flagCartaPontuada[3] = 1;
                            break;
                        case 4:
                            flagCartaPontuada[4] = 1;
                            break;
                        case 5:
                            flagCartaPontuada[5] = 1;
                            break;
                        case 6:
                            flagCartaPontuada[6] = 1;
                            break;
                        case 7:
                            flagCartaPontuada[7] = 1;
                            break;
                        case 8:
                            flagCartaPontuada[8] = 1;
                            break;
                        case 9:
                            flagCartaPontuada[9] = 1;
                            break;
                        case 10:
                            flagCartaPontuada[10] = 1;
                            break;
                        case 11:
                            flagCartaPontuada[11] = 1;
                            break;
                        case 12:
                            flagCartaPontuada[12] = 1;
                            break;
                    }
                    primeiraCartaVirada = 0;
                    this.finalizaAtividade(); //Procesamento realizado, a variavel é reinicializada em 0, para que
                    //todo o processamento seja refeito na proxima carta selecionada

                } else //Caso o retorno do metodo comparacao seja false, significa que a primeira e segunda carta não são iguais
                {

                    //JOptionPane.showMessageDialog(rootPane, "As cartas estão erradas. Tente novamente!");
                    //SU esse codigo faz com que a menssagen seja mostrada no canto superior da dela ao inves de aparecer no meio do jogo
                    JdiMensagens msg = new JdiMensagens(this, rootPaneCheckingEnabled, "Você errou. Tente novamente!", "", "");                     msg.setModal(true);                     msg.setLocation(100, 100); msg.setVisible(true);
                    logNv21.setErros(logNv21.getErros() + 1);
                    logNv21.setPontosPerdidos(logNv21.getPontosPerdidos() + 10);
                    logNv21.setPontosTotais(logNv21.getPontosTotais() - 10);
                    
                    
                    
                    
                    // SU fim desse trecho

                    //Vai tirar pontuação do jogador e exibir
                    pontuacao = pontuacao - 10;
                    if (pontuacao <= 0) {
                        pontuacao = 0;
                    }
                    lblPontos.setText("" + pontuacao);

                    flagVirada = 0; //Reinicializa a flagVirada, pois 2 cartas já foram clicadas,para 
                    //permitir que o jogador tente denovo e recomece todo o processamento

                    //Desvira a carta
                    btnCarta12.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                    flagClicavel[12] = 0;//Permite que a carta seja clicada denovo

                    switch (primeiraCartaVirada) //Outro switch case importante!! Ele verifica a flag primeiraCartaVirada e faz com que
                    //a primeira carta virada, seja virada de volta. Mas ele é especial pois, caso ja tenha alguma
                    //carta virada e já pontuada, ela nao pode ser desvirada, e por isso tem uma comparação
                    //de valores das cartas já pontuadas com a primeira carta clicada.
                    //Ele faz com que a primeira carta clicada se desvire e permita que seja clicada novamente,
                    //Exceto as cartas já pontuadas
                    {
                        case 1:
                            if (flagCartaPontuada[1] == 0) {
                                btnCarta1.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[1] = 0;
                            }
                            break;
                        case 2:
                            if (flagCartaPontuada[2] == 0) {
                                btnCarta2.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[2] = 0;
                            }
                            break;
                        case 3:
                            if (flagCartaPontuada[3] == 0) {
                                btnCarta3.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[3] = 0;
                            }
                            break;
                        case 4:
                            if (flagCartaPontuada[4] == 0) {
                                btnCarta4.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[4] = 0;
                            }
                            break;
                        case 5:
                            if (flagCartaPontuada[5] == 0) {
                                btnCarta5.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[5] = 0;
                            }
                            break;
                        case 6:
                            if (flagCartaPontuada[6] == 0) {
                                btnCarta6.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[6] = 0;
                            }
                            break;
                        case 7:
                            if (flagCartaPontuada[7] == 0) {
                                btnCarta7.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[7] = 0;
                            }
                            break;
                        case 8:
                            if (flagCartaPontuada[8] == 0) {
                                btnCarta8.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[8] = 0;
                            }
                            break;
                        case 9:
                            if (flagCartaPontuada[9] == 0) {
                                btnCarta9.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[9] = 0;
                            }
                            break;
                        case 10:
                            if (flagCartaPontuada[10] == 0) {
                                btnCarta10.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[10] = 0;
                            }
                            break;
                        case 11:
                            if (flagCartaPontuada[11] == 0) {
                                btnCarta11.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[11] = 0;
                            }
                            break;
                        case 12:
                            if (flagCartaPontuada[12] == 0) {
                                btnCarta12.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[12] = 0;
                            }
                            break;

                    }

                }

            }
        }


    }//GEN-LAST:event_btnCarta12ActionPerformed

    private void btnCarta5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCarta5ActionPerformed
        if ((flagClicavel[5] == 1) || (flagCartaPontuada[5] == 1)) {
        } else {

            if (flagVirada == 0) //Valida se não teve uma carta clicada anteriormente.
            {
                // Caso não...
                flagVirada = flagVirada + 1; //Vai contar como se fosse a 1 a ser virada
                flagClicavel[5] = 1; // Desativa a carta para ser clicada novamente
                cartaSelec[1] = valorCarta[5]; // Atribui o 1 valor de comparação para o valor da carta

                //Está trocando a imagem da carta para a imagem virada. A string carta1 é a que contem 
                //o caminho e nome da imagem, declarados embaixo do InitComponents();
                btnCarta5.setIcon(new javax.swing.ImageIcon(getClass().getResource(imgCartas[5])));

                primeiraCartaVirada = 5; //Salvando qual a carta que foi clicada primeiro.

            } else if (flagVirada == 1) //Valida se já teve uma carta clicada antes
            {
                //caso sim...
                flagVirada = flagVirada + 1; //Faz a flagvirada valer 2, para futuramente nao cair novamente
                //Nessa condição

                flagClicavel[5] = 1; // Desativa a carta para ser clicada novamente

                cartaSelec[2] = valorCarta[5]; //Atribui o 2 valor de comparação para o valor da carta

                btnCarta5.setIcon(new javax.swing.ImageIcon(getClass().getResource(imgCartas[5])));

                if (comparacao(cartaSelec[1], cartaSelec[2])) //Dentro do if é um método chamado comparacao
                //Esse metodo é simples, que recebe 2 valores em string e compara se são iguais, e retorna true caso sim
                //ou false caso não. Por padrão, chamar o metodo dentro do if, a condição para o if é se o método retornou
                // true
                {
                    //Caso seja true, as cartas clicadas são iguais

                    //JOptionPane.showMessageDialog(rootPane, "As cartas são iguais! Acertou!");
                    //SU esse codigo faz com que a menssagen seja mostrada no canto superior da dela ao inves de aparecer no meio do jogo
                    JdiMensagens msg = new JdiMensagens(this, rootPaneCheckingEnabled, "Parabéns! Você acertou, as cartas são iguais!", "", "");                     msg.setModal(true);                     msg.setLocation(100, 100);                     msg.setVisible(true);
                    logNv21.setAcertos(logNv21.getAcertos() + 1);
                    logNv21.setPontosGanhos(logNv21.getPontosGanhos() + 200);
                    logNv21.setPontosTotais(logNv21.getPontosTotais() + 200);
                    
                    
                    
                    
                    // SU fim desse trecho

                    //Salva a pontuação na classe, e exibe ela na tela
                    pontuacao = pontuacao + 200;
                    lblPontos.setText("" + pontuacao);

                    flagVirada = 0; //Como a lógica bateu, a flagVirada passa valer 0 para reiniciar 
                    //o processamento lógico das cartas selecionadas.

                    flagCartaPontuada[1] = 1; //Está dizendo que a carta foi virada de forma correta, então,
                    //Essa flag fará que essa carta não possa mais ser clicada, virada ou desvirada até o fim do jogo

                    switch (primeiraCartaVirada) //Esse switch case é extremamente importante. Ele é responsável para atribuir qual a primeira
                    //carta que foi selecinada anteriormente a essa, que está na flag primeiraCartaVirada.
                    //O valor dessa flag indica qual carta foi virada, e como a primeira e a segunda carta são iguais, 
                    // é preciso fazer que elas não sejam mais clicáveis
                    {
                        case 1:
                            flagCartaPontuada[1] = 1;
                            break;
                        case 2:
                            flagCartaPontuada[2] = 1;
                            break;
                        case 3:
                            flagCartaPontuada[3] = 1;
                            break;
                        case 4:
                            flagCartaPontuada[4] = 1;
                            break;
                        case 5:
                            flagCartaPontuada[5] = 1;
                            break;
                        case 6:
                            flagCartaPontuada[6] = 1;
                            break;
                        case 7:
                            flagCartaPontuada[7] = 1;
                            break;
                        case 8:
                            flagCartaPontuada[8] = 1;
                            break;
                        case 9:
                            flagCartaPontuada[9] = 1;
                            break;
                        case 10:
                            flagCartaPontuada[10] = 1;
                            break;
                        case 11:
                            flagCartaPontuada[11] = 1;
                            break;
                        case 12:
                            flagCartaPontuada[12] = 1;
                            break;
                    }
                    primeiraCartaVirada = 0;
                    this.finalizaAtividade(); //Procesamento realizado, a variavel é reinicializada em 0, para que
                    //todo o processamento seja refeito na proxima carta selecionada

                } else //Caso o retorno do metodo comparacao seja false, significa que a primeira e segunda carta não são iguais
                {

                    //JOptionPane.showMessageDialog(rootPane, "As cartas estão erradas. Tente novamente!");
                    //SU esse codigo faz com que a menssagen seja mostrada no canto superior da dela ao inves de aparecer no meio do jogo
                    JdiMensagens msg = new JdiMensagens(this, rootPaneCheckingEnabled, "Você errou. Tente novamente!", "", "");                     msg.setModal(true);                     msg.setLocation(100, 100); msg.setVisible(true);
                    logNv21.setErros(logNv21.getErros() + 1);
                    logNv21.setPontosPerdidos(logNv21.getPontosPerdidos() + 10);
                    logNv21.setPontosTotais(logNv21.getPontosTotais() - 10);
                    
                    
                    
                    
                    // SU fim desse trecho

                    //Vai tirar pontuação do jogador e exibir
                    pontuacao = pontuacao - 10;
                    if (pontuacao <= 0) {
                        pontuacao = 0;
                    }
                    lblPontos.setText("" + pontuacao);

                    flagVirada = 0; //Reinicializa a flagVirada, pois 2 cartas já foram clicadas,para 
                    //permitir que o jogador tente denovo e recomece todo o processamento

                    //Desvira a carta
                    btnCarta5.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                    flagClicavel[5] = 0;//Permite que a carta seja clicada denovo

                    switch (primeiraCartaVirada) //Outro switch case importante!! Ele verifica a flag primeiraCartaVirada e faz com que
                    //a primeira carta virada, seja virada de volta. Mas ele é especial pois, caso ja tenha alguma
                    //carta virada e já pontuada, ela nao pode ser desvirada, e por isso tem uma comparação
                    //de valores das cartas já pontuadas com a primeira carta clicada.
                    //Ele faz com que a primeira carta clicada se desvire e permita que seja clicada novamente,
                    //Exceto as cartas já pontuadas
                    {
                        case 1:
                            if (flagCartaPontuada[1] == 0) {
                                btnCarta1.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[1] = 0;
                            }
                            break;
                        case 2:
                            if (flagCartaPontuada[2] == 0) {
                                btnCarta2.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[2] = 0;
                            }
                            break;
                        case 3:
                            if (flagCartaPontuada[3] == 0) {
                                btnCarta3.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[3] = 0;
                            }
                            break;
                        case 4:
                            if (flagCartaPontuada[4] == 0) {
                                btnCarta4.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[4] = 0;
                            }
                            break;
                        case 5:
                            if (flagCartaPontuada[5] == 0) {
                                btnCarta5.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[5] = 0;
                            }
                            break;
                        case 6:
                            if (flagCartaPontuada[6] == 0) {
                                btnCarta6.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[6] = 0;
                            }
                            break;
                        case 7:
                            if (flagCartaPontuada[7] == 0) {
                                btnCarta7.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[7] = 0;
                            }
                            break;
                        case 8:
                            if (flagCartaPontuada[8] == 0) {
                                btnCarta8.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[8] = 0;
                            }
                            break;
                        case 9:
                            if (flagCartaPontuada[9] == 0) {
                                btnCarta9.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[9] = 0;
                            }
                            break;
                        case 10:
                            if (flagCartaPontuada[10] == 0) {
                                btnCarta10.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[10] = 0;
                            }
                            break;
                        case 11:
                            if (flagCartaPontuada[11] == 0) {
                                btnCarta11.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[11] = 0;
                            }
                            break;
                        case 12:
                            if (flagCartaPontuada[12] == 0) {
                                btnCarta12.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[12] = 0;
                            }
                            break;

                    }

                }

            }
        }
    }//GEN-LAST:event_btnCarta5ActionPerformed

    private void btnCarta6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCarta6ActionPerformed
        if ((flagClicavel[6] == 1) || (flagCartaPontuada[6] == 1)) {
        } else {

            if (flagVirada == 0) //Valida se não teve uma carta clicada anteriormente.
            {
                // Caso não...
                flagVirada = flagVirada + 1; //Vai contar como se fosse a 1 a ser virada
                flagClicavel[6] = 1; // Desativa a carta para ser clicada novamente
                cartaSelec[1] = valorCarta[6]; // Atribui o 1 valor de comparação para o valor da carta

                //Está trocando a imagem da carta para a imagem virada. A string carta1 é a que contem 
                //o caminho e nome da imagem, declarados embaixo do InitComponents();
                btnCarta6.setIcon(new javax.swing.ImageIcon(getClass().getResource(imgCartas[6])));

                primeiraCartaVirada = 6; //Salvando qual a carta que foi clicada primeiro.

            } else if (flagVirada == 1) //Valida se já teve uma carta clicada antes
            {
                //caso sim...
                flagVirada = flagVirada + 1; //Faz a flagvirada valer 2, para futuramente nao cair novamente
                //Nessa condição

                flagClicavel[6] = 1; // Desativa a carta para ser clicada novamente

                cartaSelec[2] = valorCarta[6]; //Atribui o 2 valor de comparação para o valor da carta

                btnCarta6.setIcon(new javax.swing.ImageIcon(getClass().getResource(imgCartas[6])));

                if (comparacao(cartaSelec[1], cartaSelec[2])) //Dentro do if é um método chamado comparacao
                //Esse metodo é simples, que recebe 2 valores em string e compara se são iguais, e retorna true caso sim
                //ou false caso não. Por padrão, chamar o metodo dentro do if, a condição para o if é se o método retornou
                // true
                {
                    //Caso seja true, as cartas clicadas são iguais

                    //JOptionPane.showMessageDialog(rootPane, "As cartas são iguais! Acertou!");
                    //SU esse codigo faz com que a menssagen seja mostrada no canto superior da dela ao inves de aparecer no meio do jogo
                    JdiMensagens msg = new JdiMensagens(this, rootPaneCheckingEnabled, "Parabéns! Você acertou, as cartas são iguais!", "", "");                     msg.setModal(true);                     msg.setLocation(100, 100);                     msg.setVisible(true);
                    logNv21.setAcertos(logNv21.getAcertos() + 1);
                    logNv21.setPontosGanhos(logNv21.getPontosGanhos() + 200);
                    logNv21.setPontosTotais(logNv21.getPontosTotais() + 200);
                    
                    
                    
                    
                    // SU fim desse trecho

                    //Salva a pontuação na classe, e exibe ela na tela
                    pontuacao = pontuacao + 200;
                    lblPontos.setText("" + pontuacao);

                    flagVirada = 0; //Como a lógica bateu, a flagVirada passa valer 0 para reiniciar 
                    //o processamento lógico das cartas selecionadas.

                    flagCartaPontuada[1] = 1; //Está dizendo que a carta foi virada de forma correta, então,
                    //Essa flag fará que essa carta não possa mais ser clicada, virada ou desvirada até o fim do jogo

                    switch (primeiraCartaVirada) //Esse switch case é extremamente importante. Ele é responsável para atribuir qual a primeira
                    //carta que foi selecinada anteriormente a essa, que está na flag primeiraCartaVirada.
                    //O valor dessa flag indica qual carta foi virada, e como a primeira e a segunda carta são iguais, 
                    // é preciso fazer que elas não sejam mais clicáveis
                    {
                        case 1:
                            flagCartaPontuada[1] = 1;
                            break;
                        case 2:
                            flagCartaPontuada[2] = 1;
                            break;
                        case 3:
                            flagCartaPontuada[3] = 1;
                            break;
                        case 4:
                            flagCartaPontuada[4] = 1;
                            break;
                        case 5:
                            flagCartaPontuada[5] = 1;
                            break;
                        case 6:
                            flagCartaPontuada[6] = 1;
                            break;
                        case 7:
                            flagCartaPontuada[7] = 1;
                            break;
                        case 8:
                            flagCartaPontuada[8] = 1;
                            break;
                        case 9:
                            flagCartaPontuada[9] = 1;
                            break;
                        case 10:
                            flagCartaPontuada[10] = 1;
                            break;
                        case 11:
                            flagCartaPontuada[11] = 1;
                            break;
                        case 12:
                            flagCartaPontuada[12] = 1;
                            break;
                    }
                    primeiraCartaVirada = 0;
                    this.finalizaAtividade(); //Procesamento realizado, a variavel é reinicializada em 0, para que
                    //todo o processamento seja refeito na proxima carta selecionada

                } else //Caso o retorno do metodo comparacao seja false, significa que a primeira e segunda carta não são iguais
                {

                    //JOptionPane.showMessageDialog(rootPane, "As cartas estão erradas. Tente novamente!");
                    //SU esse codigo faz com que a menssagen seja mostrada no canto superior da dela ao inves de aparecer no meio do jogo
                    JdiMensagens msg = new JdiMensagens(this, rootPaneCheckingEnabled, "Você errou. Tente novamente!", "", "");                     msg.setModal(true);                     msg.setLocation(100, 100); msg.setVisible(true);
                    logNv21.setErros(logNv21.getErros() + 1);
                    logNv21.setPontosPerdidos(logNv21.getPontosPerdidos() + 10);
                    logNv21.setPontosTotais(logNv21.getPontosTotais() - 10);
                    
                    
                    
                    
                    // SU fim desse trecho

                    //Vai tirar pontuação do jogador e exibir
                    pontuacao = pontuacao - 10;
                    if (pontuacao <= 0) {
                        pontuacao = 0;
                    }
                    lblPontos.setText("" + pontuacao);

                    flagVirada = 0; //Reinicializa a flagVirada, pois 2 cartas já foram clicadas,para 
                    //permitir que o jogador tente denovo e recomece todo o processamento

                    //Desvira a carta
                    btnCarta6.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                    flagClicavel[6] = 0;//Permite que a carta seja clicada denovo

                    switch (primeiraCartaVirada) //Outro switch case importante!! Ele verifica a flag primeiraCartaVirada e faz com que
                    //a primeira carta virada, seja virada de volta. Mas ele é especial pois, caso ja tenha alguma
                    //carta virada e já pontuada, ela nao pode ser desvirada, e por isso tem uma comparação
                    //de valores das cartas já pontuadas com a primeira carta clicada.
                    //Ele faz com que a primeira carta clicada se desvire e permita que seja clicada novamente,
                    //Exceto as cartas já pontuadas
                    {
                        case 1:
                            if (flagCartaPontuada[1] == 0) {
                                btnCarta1.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[1] = 0;
                            }
                            break;
                        case 2:
                            if (flagCartaPontuada[2] == 0) {
                                btnCarta2.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[2] = 0;
                            }
                            break;
                        case 3:
                            if (flagCartaPontuada[3] == 0) {
                                btnCarta3.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[3] = 0;
                            }
                            break;
                        case 4:
                            if (flagCartaPontuada[4] == 0) {
                                btnCarta4.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[4] = 0;
                            }
                            break;
                        case 5:
                            if (flagCartaPontuada[5] == 0) {
                                btnCarta5.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[5] = 0;
                            }
                            break;
                        case 6:
                            if (flagCartaPontuada[6] == 0) {
                                btnCarta6.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[6] = 0;
                            }
                            break;
                        case 7:
                            if (flagCartaPontuada[7] == 0) {
                                btnCarta7.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[7] = 0;
                            }
                            break;
                        case 8:
                            if (flagCartaPontuada[8] == 0) {
                                btnCarta8.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[8] = 0;
                            }
                            break;
                        case 9:
                            if (flagCartaPontuada[9] == 0) {
                                btnCarta9.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[9] = 0;
                            }
                            break;
                        case 10:
                            if (flagCartaPontuada[10] == 0) {
                                btnCarta10.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[10] = 0;
                            }
                            break;
                        case 11:
                            if (flagCartaPontuada[11] == 0) {
                                btnCarta11.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[11] = 0;
                            }
                            break;
                        case 12:
                            if (flagCartaPontuada[12] == 0) {
                                btnCarta12.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[12] = 0;
                            }
                            break;

                    }

                }

            }
        }
    }//GEN-LAST:event_btnCarta6ActionPerformed

    private void btnCarta7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCarta7ActionPerformed
        if ((flagClicavel[7] == 1) || (flagCartaPontuada[7] == 1)) {
        } else {

            if (flagVirada == 0) //Valida se não teve uma carta clicada anteriormente.
            {
                // Caso não...
                flagVirada = flagVirada + 1; //Vai contar como se fosse a 1 a ser virada
                flagClicavel[7] = 1; // Desativa a carta para ser clicada novamente
                cartaSelec[1] = valorCarta[7]; // Atribui o 1 valor de comparação para o valor da carta

                //Está trocando a imagem da carta para a imagem virada. A string carta1 é a que contem 
                //o caminho e nome da imagem, declarados embaixo do InitComponents();
                btnCarta7.setIcon(new javax.swing.ImageIcon(getClass().getResource(imgCartas[7])));

                primeiraCartaVirada = 7; //Salvando qual a carta que foi clicada primeiro.

            } else if (flagVirada == 1) //Valida se já teve uma carta clicada antes
            {
                //caso sim...
                flagVirada = flagVirada + 1; //Faz a flagvirada valer 2, para futuramente nao cair novamente
                //Nessa condição

                flagClicavel[7] = 1; // Desativa a carta para ser clicada novamente

                cartaSelec[2] = valorCarta[7]; //Atribui o 2 valor de comparação para o valor da carta

                btnCarta7.setIcon(new javax.swing.ImageIcon(getClass().getResource(imgCartas[7])));

                if (comparacao(cartaSelec[1], cartaSelec[2])) //Dentro do if é um método chamado comparacao
                //Esse metodo é simples, que recebe 2 valores em string e compara se são iguais, e retorna true caso sim
                //ou false caso não. Por padrão, chamar o metodo dentro do if, a condição para o if é se o método retornou
                // true
                {
                    //Caso seja true, as cartas clicadas são iguais

                    //JOptionPane.showMessageDialog(rootPane, "As cartas são iguais! Acertou!");
                    //SU esse codigo faz com que a menssagen seja mostrada no canto superior da dela ao inves de aparecer no meio do jogo
                    JdiMensagens msg = new JdiMensagens(this, rootPaneCheckingEnabled, "Parabéns! Você acertou, as cartas são iguais!", "", "");                     msg.setModal(true);                     msg.setLocation(100, 100);                     msg.setVisible(true);
                    logNv21.setAcertos(logNv21.getAcertos() + 1);
                    logNv21.setPontosGanhos(logNv21.getPontosGanhos() + 200);
                    logNv21.setPontosTotais(logNv21.getPontosTotais() + 200);
                    
                    
                    
                    
                    // SU fim desse trecho

                    //Salva a pontuação na classe, e exibe ela na tela
                    pontuacao = pontuacao + 200;
                    lblPontos.setText("" + pontuacao);

                    flagVirada = 0; //Como a lógica bateu, a flagVirada passa valer 0 para reiniciar 
                    //o processamento lógico das cartas selecionadas.

                    flagCartaPontuada[10] = 1; //Está dizendo que a carta foi virada de forma correta, então,
                    //Essa flag fará que essa carta não possa mais ser clicada, virada ou desvirada até o fim do jogo

                    switch (primeiraCartaVirada) //Esse switch case é extremamente importante. Ele é responsável para atribuir qual a primeira
                    //carta que foi selecinada anteriormente a essa, que está na flag primeiraCartaVirada.
                    //O valor dessa flag indica qual carta foi virada, e como a primeira e a segunda carta são iguais, 
                    // é preciso fazer que elas não sejam mais clicáveis
                    {
                        case 1:
                            flagCartaPontuada[1] = 1;
                            break;
                        case 2:
                            flagCartaPontuada[2] = 1;
                            break;
                        case 3:
                            flagCartaPontuada[3] = 1;
                            break;
                        case 4:
                            flagCartaPontuada[4] = 1;
                            break;
                        case 5:
                            flagCartaPontuada[5] = 1;
                            break;
                        case 6:
                            flagCartaPontuada[6] = 1;
                            break;
                        case 7:
                            flagCartaPontuada[7] = 1;
                            break;
                        case 8:
                            flagCartaPontuada[8] = 1;
                            break;
                        case 9:
                            flagCartaPontuada[9] = 1;
                            break;
                        case 10:
                            flagCartaPontuada[10] = 1;
                            break;
                        case 11:
                            flagCartaPontuada[11] = 1;
                            break;
                        case 12:
                            flagCartaPontuada[12] = 1;
                            break;
                    }
                    primeiraCartaVirada = 0;
                    this.finalizaAtividade(); //Procesamento realizado, a variavel é reinicializada em 0, para que
                    //todo o processamento seja refeito na proxima carta selecionada

                } else //Caso o retorno do metodo comparacao seja false, significa que a primeira e segunda carta não são iguais
                {

                    //JOptionPane.showMessageDialog(rootPane, "As cartas estão erradas. Tente novamente!");
                    //SU esse codigo faz com que a menssagen seja mostrada no canto superior da dela ao inves de aparecer no meio do jogo
                    JdiMensagens msg = new JdiMensagens(this, rootPaneCheckingEnabled, "Você errou. Tente novamente!", "", "");                     msg.setModal(true);                     msg.setLocation(100, 100); msg.setVisible(true);
                    logNv21.setErros(logNv21.getErros() + 1);
                    logNv21.setPontosPerdidos(logNv21.getPontosPerdidos() + 10);
                    logNv21.setPontosTotais(logNv21.getPontosTotais() - 10);
                    
                    
                    
                    
                    // SU fim desse trecho

                    //Vai tirar pontuação do jogador e exibir
                    pontuacao = pontuacao - 10;
                    if (pontuacao <= 0) {
                        pontuacao = 0;
                    }
                    lblPontos.setText("" + pontuacao);

                    flagVirada = 0; //Reinicializa a flagVirada, pois 2 cartas já foram clicadas,para 
                    //permitir que o jogador tente denovo e recomece todo o processamento

                    //Desvira a carta
                    btnCarta7.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                    flagClicavel[7] = 0;//Permite que a carta seja clicada denovo

                    switch (primeiraCartaVirada) //Outro switch case importante!! Ele verifica a flag primeiraCartaVirada e faz com que
                    //a primeira carta virada, seja virada de volta. Mas ele é especial pois, caso ja tenha alguma
                    //carta virada e já pontuada, ela nao pode ser desvirada, e por isso tem uma comparação
                    //de valores das cartas já pontuadas com a primeira carta clicada.
                    //Ele faz com que a primeira carta clicada se desvire e permita que seja clicada novamente,
                    //Exceto as cartas já pontuadas
                    {
                        case 1:
                            if (flagCartaPontuada[1] == 0) {
                                btnCarta1.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[1] = 0;
                            }
                            break;
                        case 2:
                            if (flagCartaPontuada[2] == 0) {
                                btnCarta2.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[2] = 0;
                            }
                            break;
                        case 3:
                            if (flagCartaPontuada[3] == 0) {
                                btnCarta3.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[3] = 0;
                            }
                            break;
                        case 4:
                            if (flagCartaPontuada[4] == 0) {
                                btnCarta4.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[4] = 0;
                            }
                            break;
                        case 5:
                            if (flagCartaPontuada[5] == 0) {
                                btnCarta5.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[5] = 0;
                            }
                            break;
                        case 6:
                            if (flagCartaPontuada[6] == 0) {
                                btnCarta6.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[6] = 0;
                            }
                            break;
                        case 7:
                            if (flagCartaPontuada[7] == 0) {
                                btnCarta7.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[7] = 0;
                            }
                            break;
                        case 8:
                            if (flagCartaPontuada[8] == 0) {
                                btnCarta8.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[8] = 0;
                            }
                            break;
                        case 9:
                            if (flagCartaPontuada[9] == 0) {
                                btnCarta9.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[9] = 0;
                            }
                            break;
                        case 10:
                            if (flagCartaPontuada[10] == 0) {
                                btnCarta10.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[10] = 0;
                            }
                            break;
                        case 11:
                            if (flagCartaPontuada[11] == 0) {
                                btnCarta11.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[11] = 0;
                            }
                            break;
                        case 12:
                            if (flagCartaPontuada[12] == 0) {
                                btnCarta12.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[12] = 0;
                            }
                            break;

                    }

                }

            }
        }
    }//GEN-LAST:event_btnCarta7ActionPerformed

    private void btnCarta8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCarta8ActionPerformed
        if ((flagClicavel[8] == 1) || (flagCartaPontuada[8] == 1)) {
        } else {

            if (flagVirada == 0) //Valida se não teve uma carta clicada anteriormente.
            {
                // Caso não...
                flagVirada = flagVirada + 1; //Vai contar como se fosse a 1 a ser virada
                flagClicavel[8] = 1; // Desativa a carta para ser clicada novamente
                cartaSelec[1] = valorCarta[8]; // Atribui o 1 valor de comparação para o valor da carta

                //Está trocando a imagem da carta para a imagem virada. A string carta1 é a que contem 
                //o caminho e nome da imagem, declarados embaixo do InitComponents();
                btnCarta8.setIcon(new javax.swing.ImageIcon(getClass().getResource(imgCartas[8])));

                primeiraCartaVirada = 8; //Salvando qual a carta que foi clicada primeiro.

            } else if (flagVirada == 1) //Valida se já teve uma carta clicada antes
            {
                //caso sim...
                flagVirada = flagVirada + 1; //Faz a flagvirada valer 2, para futuramente nao cair novamente
                //Nessa condição

                flagClicavel[8] = 1; // Desativa a carta para ser clicada novamente

                cartaSelec[2] = valorCarta[8]; //Atribui o 2 valor de comparação para o valor da carta

                btnCarta8.setIcon(new javax.swing.ImageIcon(getClass().getResource(imgCartas[8])));

                if (comparacao(cartaSelec[1], cartaSelec[2])) //Dentro do if é um método chamado comparacao
                //Esse metodo é simples, que recebe 2 valores em string e compara se são iguais, e retorna true caso sim
                //ou false caso não. Por padrão, chamar o metodo dentro do if, a condição para o if é se o método retornou
                // true
                {
                    //Caso seja true, as cartas clicadas são iguais

                    //JOptionPane.showMessageDialog(rootPane, "As cartas são iguais! Acertou!");
                    //SU esse codigo faz com que a menssagen seja mostrada no canto superior da dela ao inves de aparecer no meio do jogo
                    JdiMensagens msg = new JdiMensagens(this, rootPaneCheckingEnabled, "Parabéns! Você acertou, as cartas são iguais!", "", "");                     msg.setModal(true);                     msg.setLocation(100, 100);                     msg.setVisible(true);
                    logNv21.setAcertos(logNv21.getAcertos() + 1);
                    logNv21.setPontosGanhos(logNv21.getPontosGanhos() + 200);
                    logNv21.setPontosTotais(logNv21.getPontosTotais() + 200);
                    
                    
                    
                    
                    // SU fim desse trecho

                    //Salva a pontuação na classe, e exibe ela na tela
                    pontuacao = pontuacao + 200;
                    lblPontos.setText("" + pontuacao);

                    flagVirada = 0; //Como a lógica bateu, a flagVirada passa valer 0 para reiniciar 
                    //o processamento lógico das cartas selecionadas.

                    flagCartaPontuada[1] = 1; //Está dizendo que a carta foi virada de forma correta, então,
                    //Essa flag fará que essa carta não possa mais ser clicada, virada ou desvirada até o fim do jogo

                    switch (primeiraCartaVirada) //Esse switch case é extremamente importante. Ele é responsável para atribuir qual a primeira
                    //carta que foi selecinada anteriormente a essa, que está na flag primeiraCartaVirada.
                    //O valor dessa flag indica qual carta foi virada, e como a primeira e a segunda carta são iguais, 
                    // é preciso fazer que elas não sejam mais clicáveis
                    {
                        case 1:
                            flagCartaPontuada[1] = 1;
                            break;
                        case 2:
                            flagCartaPontuada[2] = 1;
                            break;
                        case 3:
                            flagCartaPontuada[3] = 1;
                            break;
                        case 4:
                            flagCartaPontuada[4] = 1;
                            break;
                        case 5:
                            flagCartaPontuada[5] = 1;
                            break;
                        case 6:
                            flagCartaPontuada[6] = 1;
                            break;
                        case 7:
                            flagCartaPontuada[7] = 1;
                            break;
                        case 8:
                            flagCartaPontuada[8] = 1;
                            break;
                        case 9:
                            flagCartaPontuada[9] = 1;
                            break;
                        case 10:
                            flagCartaPontuada[10] = 1;
                            break;
                        case 11:
                            flagCartaPontuada[11] = 1;
                            break;
                        case 12:
                            flagCartaPontuada[12] = 1;
                            break;
                    }
                    primeiraCartaVirada = 0;
                    this.finalizaAtividade(); //Procesamento realizado, a variavel é reinicializada em 0, para que
                    //todo o processamento seja refeito na proxima carta selecionada

                } else //Caso o retorno do metodo comparacao seja false, significa que a primeira e segunda carta não são iguais
                {

                    //JOptionPane.showMessageDialog(rootPane, "As cartas estão erradas. Tente novamente!");
                    //SU esse codigo faz com que a menssagen seja mostrada no canto superior da dela ao inves de aparecer no meio do jogo
                    JdiMensagens msg = new JdiMensagens(this, rootPaneCheckingEnabled, "Você errou. Tente novamente!", "", "");                     msg.setModal(true);                     msg.setLocation(100, 100); msg.setVisible(true);
                    logNv21.setErros(logNv21.getErros() + 1);
                    logNv21.setPontosPerdidos(logNv21.getPontosPerdidos() + 10);
                    logNv21.setPontosTotais(logNv21.getPontosTotais() - 10);
                    
                    
                    
                    
                    // SU fim desse trecho

                    //Vai tirar pontuação do jogador e exibir
                    pontuacao = pontuacao - 10;
                    if (pontuacao <= 0) {
                        pontuacao = 0;
                    }
                    lblPontos.setText("" + pontuacao);

                    flagVirada = 0; //Reinicializa a flagVirada, pois 2 cartas já foram clicadas,para 
                    //permitir que o jogador tente denovo e recomece todo o processamento

                    //Desvira a carta
                    btnCarta8.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                    flagClicavel[8] = 0;//Permite que a carta seja clicada denovo

                    switch (primeiraCartaVirada) //Outro switch case importante!! Ele verifica a flag primeiraCartaVirada e faz com que
                    //a primeira carta virada, seja virada de volta. Mas ele é especial pois, caso ja tenha alguma
                    //carta virada e já pontuada, ela nao pode ser desvirada, e por isso tem uma comparação
                    //de valores das cartas já pontuadas com a primeira carta clicada.
                    //Ele faz com que a primeira carta clicada se desvire e permita que seja clicada novamente,
                    //Exceto as cartas já pontuadas
                    {
                        case 1:
                            if (flagCartaPontuada[1] == 0) {
                                btnCarta1.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[1] = 0;
                            }
                            break;
                        case 2:
                            if (flagCartaPontuada[2] == 0) {
                                btnCarta2.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[2] = 0;
                            }
                            break;
                        case 3:
                            if (flagCartaPontuada[3] == 0) {
                                btnCarta3.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[3] = 0;
                            }
                            break;
                        case 4:
                            if (flagCartaPontuada[4] == 0) {
                                btnCarta4.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[4] = 0;
                            }
                            break;
                        case 5:
                            if (flagCartaPontuada[5] == 0) {
                                btnCarta5.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[5] = 0;
                            }
                            break;
                        case 6:
                            if (flagCartaPontuada[6] == 0) {
                                btnCarta6.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[6] = 0;
                            }
                            break;
                        case 7:
                            if (flagCartaPontuada[7] == 0) {
                                btnCarta7.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[7] = 0;
                            }
                            break;
                        case 8:
                            if (flagCartaPontuada[8] == 0) {
                                btnCarta8.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[8] = 0;
                            }
                            break;
                        case 9:
                            if (flagCartaPontuada[9] == 0) {
                                btnCarta9.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[9] = 0;
                            }
                            break;
                        case 10:
                            if (flagCartaPontuada[10] == 0) {
                                btnCarta10.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[10] = 0;
                            }
                            break;
                        case 11:
                            if (flagCartaPontuada[11] == 0) {
                                btnCarta11.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[11] = 0;
                            }
                            break;
                        case 12:
                            if (flagCartaPontuada[12] == 0) {
                                btnCarta12.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[12] = 0;
                            }
                            break;

                    }

                }

            }
        }
    }//GEN-LAST:event_btnCarta8ActionPerformed

    private void btnCarta9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCarta9ActionPerformed
        if ((flagClicavel[9] == 1) || (flagCartaPontuada[9] == 1)) {
        } else {

            if (flagVirada == 0) //Valida se não teve uma carta clicada anteriormente.
            {
                // Caso não...
                flagVirada = flagVirada + 1; //Vai contar como se fosse a 1 a ser virada
                flagClicavel[9] = 1; // Desativa a carta para ser clicada novamente
                cartaSelec[1] = valorCarta[9]; // Atribui o 1 valor de comparação para o valor da carta

                //Está trocando a imagem da carta para a imagem virada. A string carta1 é a que contem 
                //o caminho e nome da imagem, declarados embaixo do InitComponents();
                btnCarta9.setIcon(new javax.swing.ImageIcon(getClass().getResource(imgCartas[9])));

                primeiraCartaVirada = 9; //Salvando qual a carta que foi clicada primeiro.

            } else if (flagVirada == 1) //Valida se já teve uma carta clicada antes
            {
                //caso sim...
                flagVirada = flagVirada + 1; //Faz a flagvirada valer 2, para futuramente nao cair novamente
                //Nessa condição

                flagClicavel[9] = 1; // Desativa a carta para ser clicada novamente

                cartaSelec[2] = valorCarta[9]; //Atribui o 2 valor de comparação para o valor da carta

                btnCarta9.setIcon(new javax.swing.ImageIcon(getClass().getResource(imgCartas[9])));

                if (comparacao(cartaSelec[1], cartaSelec[2])) //Dentro do if é um método chamado comparacao
                //Esse metodo é simples, que recebe 2 valores em string e compara se são iguais, e retorna true caso sim
                //ou false caso não. Por padrão, chamar o metodo dentro do if, a condição para o if é se o método retornou
                // true
                {
                    //Caso seja true, as cartas clicadas são iguais

                    //JOptionPane.showMessageDialog(rootPane, "As cartas são iguais! Acertou!");
                    //SU esse codigo faz com que a menssagen seja mostrada no canto superior da dela ao inves de aparecer no meio do jogo
                    JdiMensagens msg = new JdiMensagens(this, rootPaneCheckingEnabled, "Parabéns! Você acertou, as cartas são iguais!", "", "");                     msg.setModal(true);                     msg.setLocation(100, 100);                     msg.setVisible(true);
                    logNv21.setAcertos(logNv21.getAcertos() + 1);
                    logNv21.setPontosGanhos(logNv21.getPontosGanhos() + 200);
                    logNv21.setPontosTotais(logNv21.getPontosTotais() + 200);
                    
                    
                    
                    
                    // SU fim desse trecho

                    //Salva a pontuação na classe, e exibe ela na tela
                    pontuacao = pontuacao + 200;
                    lblPontos.setText("" + pontuacao);

                    flagVirada = 0; //Como a lógica bateu, a flagVirada passa valer 0 para reiniciar 
                    //o processamento lógico das cartas selecionadas.

                    flagCartaPontuada[1] = 1; //Está dizendo que a carta foi virada de forma correta, então,
                    //Essa flag fará que essa carta não possa mais ser clicada, virada ou desvirada até o fim do jogo

                    switch (primeiraCartaVirada) //Esse switch case é extremamente importante. Ele é responsável para atribuir qual a primeira
                    //carta que foi selecinada anteriormente a essa, que está na flag primeiraCartaVirada.
                    //O valor dessa flag indica qual carta foi virada, e como a primeira e a segunda carta são iguais, 
                    // é preciso fazer que elas não sejam mais clicáveis
                    {
                        case 1:
                            flagCartaPontuada[1] = 1;
                            break;
                        case 2:
                            flagCartaPontuada[2] = 1;
                            break;
                        case 3:
                            flagCartaPontuada[3] = 1;
                            break;
                        case 4:
                            flagCartaPontuada[4] = 1;
                            break;
                        case 5:
                            flagCartaPontuada[5] = 1;
                            break;
                        case 6:
                            flagCartaPontuada[6] = 1;
                            break;
                        case 7:
                            flagCartaPontuada[7] = 1;
                            break;
                        case 8:
                            flagCartaPontuada[8] = 1;
                            break;
                        case 9:
                            flagCartaPontuada[9] = 1;
                            break;
                        case 10:
                            flagCartaPontuada[10] = 1;
                            break;
                        case 11:
                            flagCartaPontuada[11] = 1;
                            break;
                        case 12:
                            flagCartaPontuada[12] = 1;
                            break;
                    }
                    primeiraCartaVirada = 0;
                    this.finalizaAtividade(); //Procesamento realizado, a variavel é reinicializada em 0, para que
                    //todo o processamento seja refeito na proxima carta selecionada

                } else //Caso o retorno do metodo comparacao seja false, significa que a primeira e segunda carta não são iguais
                {

                    //JOptionPane.showMessageDialog(rootPane, "As cartas estão erradas. Tente novamente!");
                    //SU esse codigo faz com que a menssagen seja mostrada no canto superior da dela ao inves de aparecer no meio do jogo
                    JdiMensagens msg = new JdiMensagens(this, rootPaneCheckingEnabled, "Você errou. Tente novamente!", "", "");                     msg.setModal(true);                     msg.setLocation(100, 100); msg.setVisible(true);
                    logNv21.setErros(logNv21.getErros() + 1);
                    logNv21.setPontosPerdidos(logNv21.getPontosPerdidos() + 10);
                    logNv21.setPontosTotais(logNv21.getPontosTotais() - 10);
                    
                    
                    
                    
                    // SU fim desse trecho

                    //Vai tirar pontuação do jogador e exibir
                    pontuacao = pontuacao - 10;
                    if (pontuacao <= 0) {
                        pontuacao = 0;
                    }
                    lblPontos.setText("" + pontuacao);

                    flagVirada = 0; //Reinicializa a flagVirada, pois 2 cartas já foram clicadas,para 
                    //permitir que o jogador tente denovo e recomece todo o processamento

                    //Desvira a carta
                    btnCarta9.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                    flagClicavel[9] = 0;//Permite que a carta seja clicada denovo

                    switch (primeiraCartaVirada) //Outro switch case importante!! Ele verifica a flag primeiraCartaVirada e faz com que
                    //a primeira carta virada, seja virada de volta. Mas ele é especial pois, caso ja tenha alguma
                    //carta virada e já pontuada, ela nao pode ser desvirada, e por isso tem uma comparação
                    //de valores das cartas já pontuadas com a primeira carta clicada.
                    //Ele faz com que a primeira carta clicada se desvire e permita que seja clicada novamente,
                    //Exceto as cartas já pontuadas
                    {
                        case 1:
                            if (flagCartaPontuada[1] == 0) {
                                btnCarta1.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[1] = 0;
                            }
                            break;
                        case 2:
                            if (flagCartaPontuada[2] == 0) {
                                btnCarta2.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[2] = 0;
                            }
                            break;
                        case 3:
                            if (flagCartaPontuada[3] == 0) {
                                btnCarta3.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[3] = 0;
                            }
                            break;
                        case 4:
                            if (flagCartaPontuada[4] == 0) {
                                btnCarta4.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[4] = 0;
                            }
                            break;
                        case 5:
                            if (flagCartaPontuada[5] == 0) {
                                btnCarta5.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[5] = 0;
                            }
                            break;
                        case 6:
                            if (flagCartaPontuada[6] == 0) {
                                btnCarta6.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[6] = 0;
                            }
                            break;
                        case 7:
                            if (flagCartaPontuada[7] == 0) {
                                btnCarta7.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[7] = 0;
                            }
                            break;
                        case 8:
                            if (flagCartaPontuada[8] == 0) {
                                btnCarta8.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[8] = 0;
                            }
                            break;
                        case 9:
                            if (flagCartaPontuada[9] == 0) {
                                btnCarta9.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[9] = 0;
                            }
                            break;
                        case 10:
                            if (flagCartaPontuada[10] == 0) {
                                btnCarta10.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[10] = 0;
                            }
                            break;
                        case 11:
                            if (flagCartaPontuada[11] == 0) {
                                btnCarta11.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[11] = 0;
                            }
                            break;
                        case 12:
                            if (flagCartaPontuada[12] == 0) {
                                btnCarta12.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[12] = 0;
                            }
                            break;

                    }

                }

            }
        }
    }//GEN-LAST:event_btnCarta9ActionPerformed

    private void btnCarta10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCarta10ActionPerformed
        if ((flagClicavel[10] == 1) || (flagCartaPontuada[10] == 1)) {
        } else {

            if (flagVirada == 0) //Valida se não teve uma carta clicada anteriormente.
            {
                // Caso não...
                flagVirada = flagVirada + 1; //Vai contar como se fosse a 1 a ser virada
                flagClicavel[10] = 1; // Desativa a carta para ser clicada novamente
                cartaSelec[2] = valorCarta[10]; // Atribui o 1 valor de comparação para o valor da carta

                //Está trocando a imagem da carta para a imagem virada. A string carta1 é a que contem 
                //o caminho e nome da imagem, declarados embaixo do InitComponents();
                btnCarta10.setIcon(new javax.swing.ImageIcon(getClass().getResource(imgCartas[10])));

                primeiraCartaVirada = 10; //Salvando qual a carta que foi clicada primeiro.

            } else if (flagVirada == 1) //Valida se já teve uma carta clicada antes
            {
                //caso sim...
                flagVirada = flagVirada + 1; //Faz a flagvirada valer 2, para futuramente nao cair novamente
                //Nessa condição

                flagClicavel[10] = 1; // Desativa a carta para ser clicada novamente

                cartaSelec[2] = valorCarta[10]; //Atribui o 2 valor de comparação para o valor da carta

                btnCarta10.setIcon(new javax.swing.ImageIcon(getClass().getResource(imgCartas[10])));

                if (comparacao(cartaSelec[1], cartaSelec[2])) //Dentro do if é um método chamado comparacao
                //Esse metodo é simples, que recebe 2 valores em string e compara se são iguais, e retorna true caso sim
                //ou false caso não. Por padrão, chamar o metodo dentro do if, a condição para o if é se o método retornou
                // true
                {
                    //Caso seja true, as cartas clicadas são iguais

                    //JOptionPane.showMessageDialog(rootPane, "As cartas são iguais! Acertou!");
                    //SU esse codigo faz com que a menssagen seja mostrada no canto superior da dela ao inves de aparecer no meio do jogo
                    JdiMensagens msg = new JdiMensagens(this, rootPaneCheckingEnabled, "Parabéns! Você acertou, as cartas são iguais!", "", "");                     msg.setModal(true);                     msg.setLocation(100, 100);                     msg.setVisible(true);
                    logNv21.setAcertos(logNv21.getAcertos() + 1);
                    logNv21.setPontosGanhos(logNv21.getPontosGanhos() + 200);
                    logNv21.setPontosTotais(logNv21.getPontosTotais() + 200);
                    
                    
                    
                    
                    // SU fim desse trecho

                    //Salva a pontuação na classe, e exibe ela na tela
                    pontuacao = pontuacao + 200;
                    lblPontos.setText("" + pontuacao);

                    flagVirada = 0; //Como a lógica bateu, a flagVirada passa valer 0 para reiniciar 
                    //o processamento lógico das cartas selecionadas.

                    flagCartaPontuada[10] = 1; //Está dizendo que a carta foi virada de forma correta, então,
                    //Essa flag fará que essa carta não possa mais ser clicada, virada ou desvirada até o fim do jogo

                    switch (primeiraCartaVirada) //Esse switch case é extremamente importante. Ele é responsável para atribuir qual a primeira
                    //carta que foi selecinada anteriormente a essa, que está na flag primeiraCartaVirada.
                    //O valor dessa flag indica qual carta foi virada, e como a primeira e a segunda carta são iguais, 
                    // é preciso fazer que elas não sejam mais clicáveis
                    {
                        case 1:
                            flagCartaPontuada[1] = 1;
                            break;
                        case 2:
                            flagCartaPontuada[2] = 1;
                            break;
                        case 3:
                            flagCartaPontuada[3] = 1;
                            break;
                        case 4:
                            flagCartaPontuada[4] = 1;
                            break;
                        case 5:
                            flagCartaPontuada[5] = 1;
                            break;
                        case 6:
                            flagCartaPontuada[6] = 1;
                            break;
                        case 7:
                            flagCartaPontuada[7] = 1;
                            break;
                        case 8:
                            flagCartaPontuada[8] = 1;
                            break;
                        case 9:
                            flagCartaPontuada[9] = 1;
                            break;
                        case 10:
                            flagCartaPontuada[10] = 1;
                            break;
                        case 11:
                            flagCartaPontuada[11] = 1;
                            break;
                        case 12:
                            flagCartaPontuada[12] = 1;
                            break;
                    }
                    primeiraCartaVirada = 0;
                    this.finalizaAtividade(); //Procesamento realizado, a variavel é reinicializada em 0, para que
                    //todo o processamento seja refeito na proxima carta selecionada

                } else //Caso o retorno do metodo comparacao seja false, significa que a primeira e segunda carta não são iguais
                {

                    //JOptionPane.showMessageDialog(rootPane, "As cartas estão erradas. Tente novamente!");
                    //SU esse codigo faz com que a menssagen seja mostrada no canto superior da dela ao inves de aparecer no meio do jogo
                    JdiMensagens msg = new JdiMensagens(this, rootPaneCheckingEnabled, "Você errou. Tente novamente!", "", "");                     msg.setModal(true);                     msg.setLocation(100, 100); msg.setVisible(true);
                    logNv21.setErros(logNv21.getErros() + 1);
                    logNv21.setPontosPerdidos(logNv21.getPontosPerdidos() + 10);
                    logNv21.setPontosTotais(logNv21.getPontosTotais() - 10);
                    
                    
                    
                    
                    // SU fim desse trecho

                    //Vai tirar pontuação do jogador e exibir
                    pontuacao = pontuacao - 10;
                    if (pontuacao <= 0) {
                        pontuacao = 0;
                    }
                    lblPontos.setText("" + pontuacao);

                    flagVirada = 0; //Reinicializa a flagVirada, pois 2 cartas já foram clicadas,para 
                    //permitir que o jogador tente denovo e recomece todo o processamento

                    //Desvira a carta
                    btnCarta10.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                    flagClicavel[10] = 0;//Permite que a carta seja clicada denovo

                    switch (primeiraCartaVirada) //Outro switch case importante!! Ele verifica a flag primeiraCartaVirada e faz com que
                    //a primeira carta virada, seja virada de volta. Mas ele é especial pois, caso ja tenha alguma
                    //carta virada e já pontuada, ela nao pode ser desvirada, e por isso tem uma comparação
                    //de valores das cartas já pontuadas com a primeira carta clicada.
                    //Ele faz com que a primeira carta clicada se desvire e permita que seja clicada novamente,
                    //Exceto as cartas já pontuadas
                    {
                        case 1:
                            if (flagCartaPontuada[1] == 0) {
                                btnCarta1.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[1] = 0;
                            }
                            break;
                        case 2:
                            if (flagCartaPontuada[2] == 0) {
                                btnCarta2.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[2] = 0;
                            }
                            break;
                        case 3:
                            if (flagCartaPontuada[3] == 0) {
                                btnCarta3.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[3] = 0;
                            }
                            break;
                        case 4:
                            if (flagCartaPontuada[4] == 0) {
                                btnCarta4.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[4] = 0;
                            }
                            break;
                        case 5:
                            if (flagCartaPontuada[5] == 0) {
                                btnCarta5.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[5] = 0;
                            }
                            break;
                        case 6:
                            if (flagCartaPontuada[6] == 0) {
                                btnCarta6.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[6] = 0;
                            }
                            break;
                        case 7:
                            if (flagCartaPontuada[7] == 0) {
                                btnCarta7.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[7] = 0;
                            }
                            break;
                        case 8:
                            if (flagCartaPontuada[8] == 0) {
                                btnCarta8.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[8] = 0;
                            }
                            break;
                        case 9:
                            if (flagCartaPontuada[9] == 0) {
                                btnCarta9.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[9] = 0;
                            }
                            break;
                        case 10:
                            if (flagCartaPontuada[10] == 0) {
                                btnCarta10.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[10] = 0;
                            }
                            break;
                        case 11:
                            if (flagCartaPontuada[11] == 0) {
                                btnCarta11.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[11] = 0;
                            }
                            break;
                        case 12:
                            if (flagCartaPontuada[12] == 0) {
                                btnCarta12.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[12] = 0;
                            }
                            break;

                    }

                }

            }
        }
    }//GEN-LAST:event_btnCarta10ActionPerformed

    private void btnCarta11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCarta11ActionPerformed
        if ((flagClicavel[11] == 1) || (flagCartaPontuada[11] == 1)) {
        } else {

            if (flagVirada == 0) //Valida se não teve uma carta clicada anteriormente.
            {
                // Caso não...
                flagVirada = flagVirada + 1; //Vai contar como se fosse a 1 a ser virada
                flagClicavel[11] = 1; // Desativa a carta para ser clicada novamente
                cartaSelec[1] = valorCarta[11]; // Atribui o 1 valor de comparação para o valor da carta

                //Está trocando a imagem da carta para a imagem virada. A string carta1 é a que contem 
                //o caminho e nome da imagem, declarados embaixo do InitComponents();
                btnCarta11.setIcon(new javax.swing.ImageIcon(getClass().getResource(imgCartas[11])));

                primeiraCartaVirada = 11; //Salvando qual a carta que foi clicada primeiro.

            } else if (flagVirada == 1) //Valida se já teve uma carta clicada antes
            {
                //caso sim...
                flagVirada = flagVirada + 1; //Faz a flagvirada valer 2, para futuramente nao cair novamente
                //Nessa condição

                flagClicavel[11] = 1; // Desativa a carta para ser clicada novamente

                cartaSelec[2] = valorCarta[11]; //Atribui o 2 valor de comparação para o valor da carta

                btnCarta11.setIcon(new javax.swing.ImageIcon(getClass().getResource(imgCartas[11])));

                if (comparacao(cartaSelec[2], cartaSelec[1])) //Dentro do if é um método chamado comparacao
                //Esse metodo é simples, que recebe 2 valores em string e compara se são iguais, e retorna true caso sim
                //ou false caso não. Por padrão, chamar o metodo dentro do if, a condição para o if é se o método retornou
                // true
                {
                    //Caso seja true, as cartas clicadas são iguais

                    //JOptionPane.showMessageDialog(rootPane, "As cartas são iguais! Acertou!");
                    //SU esse codigo faz com que a menssagen seja mostrada no canto superior da dela ao inves de aparecer no meio do jogo
                    JdiMensagens msg = new JdiMensagens(this, rootPaneCheckingEnabled, "Parabéns! Você acertou, as cartas são iguais!", "", "");                     msg.setModal(true);                     msg.setLocation(100, 100);                     msg.setVisible(true);
                    logNv21.setAcertos(logNv21.getAcertos() + 1);
                    logNv21.setPontosGanhos(logNv21.getPontosGanhos() + 200);
                    logNv21.setPontosTotais(logNv21.getPontosTotais() + 200);
                    
                    
                    
                    
                    // SU fim desse trecho

                    //Salva a pontuação na classe, e exibe ela na tela
                    pontuacao = pontuacao + 200;
                    lblPontos.setText("" + pontuacao);

                    flagVirada = 0; //Como a lógica bateu, a flagVirada passa valer 0 para reiniciar 
                    //o processamento lógico das cartas selecionadas.

                    flagCartaPontuada[1] = 1; //Está dizendo que a carta foi virada de forma correta, então,
                    //Essa flag fará que essa carta não possa mais ser clicada, virada ou desvirada até o fim do jogo

                    switch (primeiraCartaVirada) //Esse switch case é extremamente importante. Ele é responsável para atribuir qual a primeira
                    //carta que foi selecinada anteriormente a essa, que está na flag primeiraCartaVirada.
                    //O valor dessa flag indica qual carta foi virada, e como a primeira e a segunda carta são iguais, 
                    // é preciso fazer que elas não sejam mais clicáveis
                    {
                        case 1:
                            flagCartaPontuada[1] = 1;
                            break;
                        case 2:
                            flagCartaPontuada[2] = 1;
                            break;
                        case 3:
                            flagCartaPontuada[3] = 1;
                            break;
                        case 4:
                            flagCartaPontuada[4] = 1;
                            break;
                        case 5:
                            flagCartaPontuada[5] = 1;
                            break;
                        case 6:
                            flagCartaPontuada[6] = 1;
                            break;
                        case 7:
                            flagCartaPontuada[7] = 1;
                            break;
                        case 8:
                            flagCartaPontuada[8] = 1;
                            break;
                        case 9:
                            flagCartaPontuada[9] = 1;
                            break;
                        case 10:
                            flagCartaPontuada[10] = 1;
                            break;
                        case 11:
                            flagCartaPontuada[11] = 1;
                            break;
                        case 12:
                            flagCartaPontuada[12] = 1;
                            break;
                    }
                    primeiraCartaVirada = 0;
                    this.finalizaAtividade(); //Procesamento realizado, a variavel é reinicializada em 0, para que
                    //todo o processamento seja refeito na proxima carta selecionada

                } else //Caso o retorno do metodo comparacao seja false, significa que a primeira e segunda carta não são iguais
                {

                    //JOptionPane.showMessageDialog(rootPane, "As cartas estão erradas. Tente novamente!");
                    //SU esse codigo faz com que a menssagen seja mostrada no canto superior da dela ao inves de aparecer no meio do jogo
                    JdiMensagens msg = new JdiMensagens(this, rootPaneCheckingEnabled, "Você errou. Tente novamente!", "", "");                     msg.setModal(true);                     msg.setLocation(100, 100); msg.setVisible(true);
                    logNv21.setErros(logNv21.getErros() + 1);
                    logNv21.setPontosPerdidos(logNv21.getPontosPerdidos() + 10);
                    logNv21.setPontosTotais(logNv21.getPontosTotais() - 10);
                    
                    
                    
                    
                    // SU fim desse trecho

                    //Vai tirar pontuação do jogador e exibir
                    pontuacao = pontuacao - 10;
                    if (pontuacao <= 0) {
                        pontuacao = 0;
                    }
                    lblPontos.setText("" + pontuacao);

                    flagVirada = 0; //Reinicializa a flagVirada, pois 2 cartas já foram clicadas,para 
                    //permitir que o jogador tente denovo e recomece todo o processamento

                    //Desvira a carta
                    btnCarta11.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                    flagClicavel[11] = 0;//Permite que a carta seja clicada denovo

                    switch (primeiraCartaVirada) //Outro switch case importante!! Ele verifica a flag primeiraCartaVirada e faz com que
                    //a primeira carta virada, seja virada de volta. Mas ele é especial pois, caso ja tenha alguma
                    //carta virada e já pontuada, ela nao pode ser desvirada, e por isso tem uma comparação
                    //de valores das cartas já pontuadas com a primeira carta clicada.
                    //Ele faz com que a primeira carta clicada se desvire e permita que seja clicada novamente,
                    //Exceto as cartas já pontuadas
                    {
                        case 1:
                            if (flagCartaPontuada[1] == 0) {
                                btnCarta1.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[1] = 0;
                            }
                            break;
                        case 2:
                            if (flagCartaPontuada[2] == 0) {
                                btnCarta2.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[2] = 0;
                            }
                            break;
                        case 3:
                            if (flagCartaPontuada[3] == 0) {
                                btnCarta3.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[3] = 0;
                            }
                            break;
                        case 4:
                            if (flagCartaPontuada[4] == 0) {
                                btnCarta4.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[4] = 0;
                            }
                            break;
                        case 5:
                            if (flagCartaPontuada[5] == 0) {
                                btnCarta5.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[5] = 0;
                            }
                            break;
                        case 6:
                            if (flagCartaPontuada[6] == 0) {
                                btnCarta6.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[6] = 0;
                            }
                            break;
                        case 7:
                            if (flagCartaPontuada[7] == 0) {
                                btnCarta7.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[7] = 0;
                            }
                            break;
                        case 8:
                            if (flagCartaPontuada[8] == 0) {
                                btnCarta8.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[8] = 0;
                            }
                            break;
                        case 9:
                            if (flagCartaPontuada[9] == 0) {
                                btnCarta9.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[9] = 0;
                            }
                            break;
                        case 10:
                            if (flagCartaPontuada[10] == 0) {
                                btnCarta10.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[10] = 0;
                            }
                            break;
                        case 11:
                            if (flagCartaPontuada[11] == 0) {
                                btnCarta11.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[11] = 0;
                            }
                            break;
                        case 12:
                            if (flagCartaPontuada[12] == 0) {
                                btnCarta12.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
                                flagClicavel[12] = 0;
                            }
                            break;

                    }

                }

            }
        }
    }//GEN-LAST:event_btnCarta11ActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:

        gerarLogEncerrar();
    }//GEN-LAST:event_formWindowClosing

    private void btnDeslogarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeslogarActionPerformed
        // TODO add your handling code here:
gerarLogEncerrar();
        tempoSessao.stop();
        FrmLogin telaLogin = new FrmLogin();
        telaLogin.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnDeslogarActionPerformed

    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed
        // TODO add your handling code here:
        gerarLogEncerrar();
        tempoSessao.stop();
        System.exit(0);
        
    }//GEN-LAST:event_btnSairActionPerformed

    private void btnSelecNivelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelecNivelActionPerformed
        // TODO add your handling code here:
        String nome = "";
        Usuario conectar = new Usuario();
        nome = conectar.nomeUsuarioCod(codUsuario);
        conectar.inserirPontuacao(codUsuario, pontuacao);
gerarLogEncerrar();
        tempoSessao.stop();
        FrmTelaNivel telaNivel = new FrmTelaNivel(nome, codUsuario, logNv21);
        telaNivel.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnSelecNivelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmNivel2_1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmNivel2_1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmNivel2_1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmNivel2_1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new FrmNivel2_1(codUsuario, logNv21).setVisible(true);
            }
        });
    }
    
    public void acaoDoTimer2() {
        contador2++;
        
        if (contador2  == 1) {
            btnCarta1.setVisible(true);
            sfx.tocarCardPlace();
        }
        if (contador2  == 2) {
            btnCarta2.setVisible(true);
            sfx.tocarCardPlace();
        }
        if (contador2  == 3) {
            btnCarta3.setVisible(true);
            sfx.tocarCardPlace();
        }
        if (contador2  == 4) {
            btnCarta4.setVisible(true);
            sfx.tocarCardPlace();
        }
        if (contador2  == 5) {
            btnCarta5.setVisible(true);
            sfx.tocarCardPlace();
        }
        if (contador2  == 6) {
            btnCarta6.setVisible(true);
            sfx.tocarCardPlace();
        }
        if (contador2  == 7) {
            btnCarta7.setVisible(true);
            sfx.tocarCardPlace();
        }
        if (contador2  == 8) {
            btnCarta8.setVisible(true);
            sfx.tocarCardPlace();
        }
        if (contador2  == 9) {
            btnCarta9.setVisible(true);
            sfx.tocarCardPlace();
        }
        if (contador2  == 10) {
            btnCarta10.setVisible(true);
            sfx.tocarCardPlace();
        }
        if (contador2  == 11) {
            btnCarta11.setVisible(true);
            sfx.tocarCardPlace();
        }
        if (contador2  == 12) {
            btnCarta12.setVisible(true);
            sfx.tocarCardPlace();
        }
        
        if (contador == 30) {
            t2.stop();
        }
        
    }
    public void cartasInvisiveis () {
        btnCarta1.setVisible(false);
        btnCarta2.setVisible(false);
        btnCarta3.setVisible(false);
        btnCarta4.setVisible(false);
        btnCarta5.setVisible(false);
        btnCarta6.setVisible(false);
        btnCarta7.setVisible(false);
        btnCarta8.setVisible(false);
        btnCarta9.setVisible(false);
        btnCarta10.setVisible(false);
        btnCarta11.setVisible(false);
        btnCarta12.setVisible(false);
        
        
        
        
    }
    
     public void acaoDoTimer() {

        contador--;

        if (contador <= 6) {
            if (contador % 2 == 0) {
                desviraCartas();
                sfx.tocarCardTakeOut();
            } else {
                viraCartas();
            }
        } else {
            viraCartas();
        }

        if (contador == 0) {
            t.stop();
            desviraCartas();
            destravarCartas();
        }










    }
     
     public void viraCartas() {

        btnCarta1.setIcon(new javax.swing.ImageIcon(getClass().getResource(imgCartas[1])));
        btnCarta2.setIcon(new javax.swing.ImageIcon(getClass().getResource(imgCartas[2])));
        btnCarta3.setIcon(new javax.swing.ImageIcon(getClass().getResource(imgCartas[3])));
        btnCarta4.setIcon(new javax.swing.ImageIcon(getClass().getResource(imgCartas[4])));
        btnCarta5.setIcon(new javax.swing.ImageIcon(getClass().getResource(imgCartas[5])));
        btnCarta6.setIcon(new javax.swing.ImageIcon(getClass().getResource(imgCartas[6])));
        btnCarta7.setIcon(new javax.swing.ImageIcon(getClass().getResource(imgCartas[7])));
        btnCarta8.setIcon(new javax.swing.ImageIcon(getClass().getResource(imgCartas[8])));
        btnCarta9.setIcon(new javax.swing.ImageIcon(getClass().getResource(imgCartas[9])));
        btnCarta10.setIcon(new javax.swing.ImageIcon(getClass().getResource(imgCartas[10])));
        btnCarta11.setIcon(new javax.swing.ImageIcon(getClass().getResource(imgCartas[11])));
        btnCarta12.setIcon(new javax.swing.ImageIcon(getClass().getResource(imgCartas[12])));
       
    }

    public void desviraCartas() {
        btnCarta1.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
        btnCarta2.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
        btnCarta3.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
        btnCarta4.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
        btnCarta5.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
        btnCarta6.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
        btnCarta7.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
        btnCarta8.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
        btnCarta9.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
        btnCarta10.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
        btnCarta11.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
        btnCarta12.setIcon(new javax.swing.ImageIcon(getClass().getResource(cartanaovirada)));
    }

    public void travarCartas() {

        for (int i = 0; i <= 12; i++) {
            flagCartaPontuada[i] = 1;
        }

    }

    public void destravarCartas() {
        for (int i = 0; i <= 12; i++) {
            flagCartaPontuada[i] = 0;
        }
    }

    public void acaoTempoSessao() {
        logNv21.seg++;

        if (logNv21.seg == 30) {
            gerarLogEncerrar();
        }


        if (logNv21.seg == 60) {
            logNv21.min++;
            logNv21.seg = 0;
        }

        if (logNv21.min == 60) {
            logNv21.hor++;
        }

        if (logNv21.hor > 99) {
            logNv21.hor = 99;
        }



    }

    private void gerarLog() {
        Log salvarLog = new Log();

        salvarLog.gerarLogSessao("nv21", logNv21);
        tempoSessao.stop();
    }

    private void gerarLogEncerrar() {
        Log salvarLog = new Log();
t2.stop();t.stop();
        Date dataSessao = new Date();

        SimpleDateFormat formatoData = new SimpleDateFormat("dd/MM/yyyy");
        SimpleDateFormat formatoHora = new SimpleDateFormat("hh:mm:ss");

        logNv21.setHoraFimSessao(formatoData.format(dataSessao) + " " + formatoHora.format(dataSessao));

logNv21.setPontuacaoTotalSessao(logNv21.getPontosTotais() + logNv21.getPontuacaoTotalSessao());
        logNv21.setTempoSessao("" + logNv21.hor + ":" + logNv21.min + ":" + logNv21.seg);
        tempoSessao.stop();


        salvarLog.gerarLogEncerrarSessao("nv21", logNv21);

    }

    public boolean comparacao(String carta1, String carta2) {
        if (carta1 == carta2) {
            return true;
        }
        return false;
    }

    public void embaralhar() {

        cartas.addAll(Arrays.asList("/Cartas_nvl2/cartinhab.png", "/Cartas_nvl2/cartinhab.png",
                "/Cartas_nvl2/cartinhac.png", "/Cartas_nvl2/cartinhac.png",
                "/Cartas_nvl2/cartinhad.png", "/Cartas_nvl2/cartinhad.png",
                "/Cartas_nvl2/cartinhaf.png", "/Cartas_nvl2/cartinhaf.png",
                "/Cartas_nvl2/cartinhag.png", "/Cartas_nvl2/cartinhag.png",
                "/Cartas_nvl2/cartinhah.png", "/Cartas_nvl2/cartinhah.png"));

        Collections.shuffle(cartas); //importar Collections, o .shuffle é quem ordena a ordem dos valores de um vetor
        //está indo o arraylist cartas nele, que tem o diretorio para a imagem das cartas e entao ele embaralha

        for (int i = 1; i <= 12; i++) {
            imgCartas[i] = cartas.get(i - 1);
        }



//        imgCartas[1] = cartas.get(0);
//        imgCartas[2] = cartas.get(1);
//        imgCartas[3] = cartas.get(2);
//        imgCartas[4] = cartas.get(3);
//        imgCartas[5] = cartas.get(4);
//        imgCartas[6] = cartas.get(5);
//        imgCartas[7] = cartas.get(6);
//        imgCartas[8] = cartas.get(7);
//        imgCartas[9] = cartas.get(8);
//        imgCartas[10] = cartas.get(9);
//        imgCartas[11] = cartas.get(10);
//        imgCartas[12] = cartas.get(11);

        for (int i = 1; i <= 12; i++) {
            valorCarta[i] = imgCartas[i];
        }

//        valorCarta[1] = imgCartas[1];
//        valorCarta[2] = imgCartas[2];
//        valorCarta[3] = imgCartas[3];
//        valorCarta[4] = imgCartas[4];
//        valorCarta[5] = imgCartas[5];
//        valorCarta[6] = imgCartas[6];
//        valorCarta[7] = imgCartas[7];
//        valorCarta[8] = imgCartas[8];
//        valorCarta[9] = imgCartas[9];
//        valorCarta[10] = imgCartas[10];
//        valorCarta[11] = imgCartas[11];
//        valorCarta[12] = imgCartas[12];

    }

    private void finalizaAtividade() {
        int aux = 0;
        for (int i = 1; i <= 12; i++) {
            if (flagCartaPontuada[i] == 1) {
                aux = aux + 1;

            }

            if (aux == 12) {
                JdiMensagens msg = new JdiMensagens(this, rootPaneCheckingEnabled, "Parabéns! Você acertou todas as cartas!", "", "");
                    msg.setModal(true);
                    msg.setVisible(true);
                Usuario conectar = new Usuario();
                pontuacao = Integer.parseInt(lblPontos.getText());
                conectar.inserirPontuacao(codUsuario, pontuacao);

                gerarLogEncerrar();
                
                JdiDesempenhoNivel stats = new JdiDesempenhoNivel(this, rootPaneCheckingEnabled, logNv21, pontuacao);
                stats.setModal(true);
                stats.setVisible(true);

                FrmAtividade2_1 telaAtividade = new FrmAtividade2_1(codUsuario, logNv21);
                telaAtividade.setVisible(true);
                this.dispose();
            }

        }

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAjuda;
    private javax.swing.JButton btnAvancar;
    private javax.swing.JButton btnCarta1;
    private javax.swing.JButton btnCarta10;
    private javax.swing.JButton btnCarta11;
    private javax.swing.JButton btnCarta12;
    private javax.swing.JButton btnCarta2;
    private javax.swing.JButton btnCarta3;
    private javax.swing.JButton btnCarta4;
    private javax.swing.JButton btnCarta5;
    private javax.swing.JToggleButton btnCarta6;
    private javax.swing.JButton btnCarta7;
    private javax.swing.JButton btnCarta8;
    private javax.swing.JToggleButton btnCarta9;
    private javax.swing.JButton btnDeslogar;
    private javax.swing.JButton btnSair;
    private javax.swing.JButton btnSelecNivel;
    private javax.swing.JLabel descricao_nivel2;
    private javax.swing.JLabel fundo_nivel1_2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel;
    private javax.swing.JLabel lblPontos;
    private javax.swing.JLabel lbl_2;
    // End of variables declaration//GEN-END:variables
}
